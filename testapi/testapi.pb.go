// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: testapi.proto

package testapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Test *TestProto `protobuf:"bytes,1,opt,name=test,proto3" json:"test,omitempty"`
}

func (x *TestRequest) Reset() {
	*x = TestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRequest) ProtoMessage() {}

func (x *TestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRequest.ProtoReflect.Descriptor instead.
func (*TestRequest) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{0}
}

func (x *TestRequest) GetTest() *TestProto {
	if x != nil {
		return x.Test
	}
	return nil
}

type TestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TestResponse) Reset() {
	*x = TestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestResponse) ProtoMessage() {}

func (x *TestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestResponse.ProtoReflect.Descriptor instead.
func (*TestResponse) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{1}
}

type TestProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Types that are assignable to Data:
	//
	//	*TestProto_Assignable1
	//	*TestProto_Assignable2
	//	*TestProto_Assignable3
	//	*TestProto_Assignable4
	//	*TestProto_Assignable5
	//	*TestProto_Assignable6
	//	*TestProto_Assignable7
	//	*TestProto_Assignable8
	//	*TestProto_Assignable9
	//	*TestProto_Assignable10
	//	*TestProto_Assignable11
	//	*TestProto_Assignable12
	//	*TestProto_Assignable13
	//	*TestProto_Assignable14
	//	*TestProto_Assignable15
	//	*TestProto_Assignable16
	//	*TestProto_Assignable17
	//	*TestProto_Assignable18
	//	*TestProto_Assignable19
	//	*TestProto_Assignable20
	//	*TestProto_Assignable21
	//	*TestProto_Assignable22
	//	*TestProto_Assignable23
	//	*TestProto_Assignable24
	//	*TestProto_Assignable25
	//	*TestProto_Assignable26
	//	*TestProto_Assignable27
	//	*TestProto_Assignable28
	//	*TestProto_Assignable29
	//	*TestProto_Assignable30
	//	*TestProto_Assignable31
	//	*TestProto_Assignable32
	//	*TestProto_Assignable33
	//	*TestProto_Assignable34
	//	*TestProto_Assignable35
	//	*TestProto_Assignable36
	//	*TestProto_Assignable37
	//	*TestProto_Assignable38
	//	*TestProto_Assignable39
	//	*TestProto_Assignable40
	//	*TestProto_Assignable41
	//	*TestProto_Assignable42
	//	*TestProto_Assignable43
	//	*TestProto_Assignable44
	//	*TestProto_Assignable45
	//	*TestProto_Assignable46
	//	*TestProto_Assignable47
	//	*TestProto_Assignable48
	//	*TestProto_Assignable49
	//	*TestProto_Assignable50
	//	*TestProto_Assignable51
	//	*TestProto_Assignable52
	//	*TestProto_Assignable53
	//	*TestProto_Assignable54
	//	*TestProto_Assignable55
	//	*TestProto_Assignable56
	//	*TestProto_Assignable57
	//	*TestProto_Assignable58
	//	*TestProto_Assignable59
	//	*TestProto_Assignable60
	//	*TestProto_Assignable61
	//	*TestProto_Assignable62
	//	*TestProto_Assignable63
	//	*TestProto_Assignable64
	//	*TestProto_Assignable65
	//	*TestProto_Assignable66
	//	*TestProto_Assignable67
	//	*TestProto_Assignable68
	//	*TestProto_Assignable69
	//	*TestProto_Assignable70
	//	*TestProto_Assignable71
	//	*TestProto_Assignable72
	//	*TestProto_Assignable73
	//	*TestProto_Assignable74
	//	*TestProto_Assignable75
	//	*TestProto_Assignable76
	//	*TestProto_Assignable77
	//	*TestProto_Assignable78
	//	*TestProto_Assignable79
	//	*TestProto_Assignable80
	//	*TestProto_Assignable81
	//	*TestProto_Assignable82
	//	*TestProto_Assignable83
	//	*TestProto_Assignable84
	//	*TestProto_Assignable85
	//	*TestProto_Assignable86
	//	*TestProto_Assignable87
	//	*TestProto_Assignable88
	//	*TestProto_Assignable89
	//	*TestProto_Assignable90
	//	*TestProto_Assignable91
	//	*TestProto_Assignable92
	//	*TestProto_Assignable93
	//	*TestProto_Assignable94
	//	*TestProto_Assignable95
	//	*TestProto_Assignable96
	//	*TestProto_Assignable97
	//	*TestProto_Assignable98
	//	*TestProto_Assignable99
	//	*TestProto_Assignable100
	Data isTestProto_Data `protobuf_oneof:"data"`
}

func (x *TestProto) Reset() {
	*x = TestProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestProto) ProtoMessage() {}

func (x *TestProto) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestProto.ProtoReflect.Descriptor instead.
func (*TestProto) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{2}
}

func (x *TestProto) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (m *TestProto) GetData() isTestProto_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *TestProto) GetAssignable1() *Assignable1 {
	if x, ok := x.GetData().(*TestProto_Assignable1); ok {
		return x.Assignable1
	}
	return nil
}

func (x *TestProto) GetAssignable2() *Assignable2 {
	if x, ok := x.GetData().(*TestProto_Assignable2); ok {
		return x.Assignable2
	}
	return nil
}

func (x *TestProto) GetAssignable3() *Assignable3 {
	if x, ok := x.GetData().(*TestProto_Assignable3); ok {
		return x.Assignable3
	}
	return nil
}

func (x *TestProto) GetAssignable4() *Assignable4 {
	if x, ok := x.GetData().(*TestProto_Assignable4); ok {
		return x.Assignable4
	}
	return nil
}

func (x *TestProto) GetAssignable5() *Assignable5 {
	if x, ok := x.GetData().(*TestProto_Assignable5); ok {
		return x.Assignable5
	}
	return nil
}

func (x *TestProto) GetAssignable6() *Assignable6 {
	if x, ok := x.GetData().(*TestProto_Assignable6); ok {
		return x.Assignable6
	}
	return nil
}

func (x *TestProto) GetAssignable7() *Assignable7 {
	if x, ok := x.GetData().(*TestProto_Assignable7); ok {
		return x.Assignable7
	}
	return nil
}

func (x *TestProto) GetAssignable8() *Assignable8 {
	if x, ok := x.GetData().(*TestProto_Assignable8); ok {
		return x.Assignable8
	}
	return nil
}

func (x *TestProto) GetAssignable9() *Assignable9 {
	if x, ok := x.GetData().(*TestProto_Assignable9); ok {
		return x.Assignable9
	}
	return nil
}

func (x *TestProto) GetAssignable10() *Assignable10 {
	if x, ok := x.GetData().(*TestProto_Assignable10); ok {
		return x.Assignable10
	}
	return nil
}

func (x *TestProto) GetAssignable11() *Assignable11 {
	if x, ok := x.GetData().(*TestProto_Assignable11); ok {
		return x.Assignable11
	}
	return nil
}

func (x *TestProto) GetAssignable12() *Assignable12 {
	if x, ok := x.GetData().(*TestProto_Assignable12); ok {
		return x.Assignable12
	}
	return nil
}

func (x *TestProto) GetAssignable13() *Assignable13 {
	if x, ok := x.GetData().(*TestProto_Assignable13); ok {
		return x.Assignable13
	}
	return nil
}

func (x *TestProto) GetAssignable14() *Assignable14 {
	if x, ok := x.GetData().(*TestProto_Assignable14); ok {
		return x.Assignable14
	}
	return nil
}

func (x *TestProto) GetAssignable15() *Assignable15 {
	if x, ok := x.GetData().(*TestProto_Assignable15); ok {
		return x.Assignable15
	}
	return nil
}

func (x *TestProto) GetAssignable16() *Assignable16 {
	if x, ok := x.GetData().(*TestProto_Assignable16); ok {
		return x.Assignable16
	}
	return nil
}

func (x *TestProto) GetAssignable17() *Assignable17 {
	if x, ok := x.GetData().(*TestProto_Assignable17); ok {
		return x.Assignable17
	}
	return nil
}

func (x *TestProto) GetAssignable18() *Assignable18 {
	if x, ok := x.GetData().(*TestProto_Assignable18); ok {
		return x.Assignable18
	}
	return nil
}

func (x *TestProto) GetAssignable19() *Assignable19 {
	if x, ok := x.GetData().(*TestProto_Assignable19); ok {
		return x.Assignable19
	}
	return nil
}

func (x *TestProto) GetAssignable20() *Assignable20 {
	if x, ok := x.GetData().(*TestProto_Assignable20); ok {
		return x.Assignable20
	}
	return nil
}

func (x *TestProto) GetAssignable21() *Assignable21 {
	if x, ok := x.GetData().(*TestProto_Assignable21); ok {
		return x.Assignable21
	}
	return nil
}

func (x *TestProto) GetAssignable22() *Assignable22 {
	if x, ok := x.GetData().(*TestProto_Assignable22); ok {
		return x.Assignable22
	}
	return nil
}

func (x *TestProto) GetAssignable23() *Assignable23 {
	if x, ok := x.GetData().(*TestProto_Assignable23); ok {
		return x.Assignable23
	}
	return nil
}

func (x *TestProto) GetAssignable24() *Assignable24 {
	if x, ok := x.GetData().(*TestProto_Assignable24); ok {
		return x.Assignable24
	}
	return nil
}

func (x *TestProto) GetAssignable25() *Assignable25 {
	if x, ok := x.GetData().(*TestProto_Assignable25); ok {
		return x.Assignable25
	}
	return nil
}

func (x *TestProto) GetAssignable26() *Assignable26 {
	if x, ok := x.GetData().(*TestProto_Assignable26); ok {
		return x.Assignable26
	}
	return nil
}

func (x *TestProto) GetAssignable27() *Assignable27 {
	if x, ok := x.GetData().(*TestProto_Assignable27); ok {
		return x.Assignable27
	}
	return nil
}

func (x *TestProto) GetAssignable28() *Assignable28 {
	if x, ok := x.GetData().(*TestProto_Assignable28); ok {
		return x.Assignable28
	}
	return nil
}

func (x *TestProto) GetAssignable29() *Assignable29 {
	if x, ok := x.GetData().(*TestProto_Assignable29); ok {
		return x.Assignable29
	}
	return nil
}

func (x *TestProto) GetAssignable30() *Assignable30 {
	if x, ok := x.GetData().(*TestProto_Assignable30); ok {
		return x.Assignable30
	}
	return nil
}

func (x *TestProto) GetAssignable31() *Assignable31 {
	if x, ok := x.GetData().(*TestProto_Assignable31); ok {
		return x.Assignable31
	}
	return nil
}

func (x *TestProto) GetAssignable32() *Assignable32 {
	if x, ok := x.GetData().(*TestProto_Assignable32); ok {
		return x.Assignable32
	}
	return nil
}

func (x *TestProto) GetAssignable33() *Assignable33 {
	if x, ok := x.GetData().(*TestProto_Assignable33); ok {
		return x.Assignable33
	}
	return nil
}

func (x *TestProto) GetAssignable34() *Assignable34 {
	if x, ok := x.GetData().(*TestProto_Assignable34); ok {
		return x.Assignable34
	}
	return nil
}

func (x *TestProto) GetAssignable35() *Assignable35 {
	if x, ok := x.GetData().(*TestProto_Assignable35); ok {
		return x.Assignable35
	}
	return nil
}

func (x *TestProto) GetAssignable36() *Assignable36 {
	if x, ok := x.GetData().(*TestProto_Assignable36); ok {
		return x.Assignable36
	}
	return nil
}

func (x *TestProto) GetAssignable37() *Assignable37 {
	if x, ok := x.GetData().(*TestProto_Assignable37); ok {
		return x.Assignable37
	}
	return nil
}

func (x *TestProto) GetAssignable38() *Assignable38 {
	if x, ok := x.GetData().(*TestProto_Assignable38); ok {
		return x.Assignable38
	}
	return nil
}

func (x *TestProto) GetAssignable39() *Assignable39 {
	if x, ok := x.GetData().(*TestProto_Assignable39); ok {
		return x.Assignable39
	}
	return nil
}

func (x *TestProto) GetAssignable40() *Assignable40 {
	if x, ok := x.GetData().(*TestProto_Assignable40); ok {
		return x.Assignable40
	}
	return nil
}

func (x *TestProto) GetAssignable41() *Assignable41 {
	if x, ok := x.GetData().(*TestProto_Assignable41); ok {
		return x.Assignable41
	}
	return nil
}

func (x *TestProto) GetAssignable42() *Assignable42 {
	if x, ok := x.GetData().(*TestProto_Assignable42); ok {
		return x.Assignable42
	}
	return nil
}

func (x *TestProto) GetAssignable43() *Assignable43 {
	if x, ok := x.GetData().(*TestProto_Assignable43); ok {
		return x.Assignable43
	}
	return nil
}

func (x *TestProto) GetAssignable44() *Assignable44 {
	if x, ok := x.GetData().(*TestProto_Assignable44); ok {
		return x.Assignable44
	}
	return nil
}

func (x *TestProto) GetAssignable45() *Assignable45 {
	if x, ok := x.GetData().(*TestProto_Assignable45); ok {
		return x.Assignable45
	}
	return nil
}

func (x *TestProto) GetAssignable46() *Assignable46 {
	if x, ok := x.GetData().(*TestProto_Assignable46); ok {
		return x.Assignable46
	}
	return nil
}

func (x *TestProto) GetAssignable47() *Assignable47 {
	if x, ok := x.GetData().(*TestProto_Assignable47); ok {
		return x.Assignable47
	}
	return nil
}

func (x *TestProto) GetAssignable48() *Assignable48 {
	if x, ok := x.GetData().(*TestProto_Assignable48); ok {
		return x.Assignable48
	}
	return nil
}

func (x *TestProto) GetAssignable49() *Assignable49 {
	if x, ok := x.GetData().(*TestProto_Assignable49); ok {
		return x.Assignable49
	}
	return nil
}

func (x *TestProto) GetAssignable50() *Assignable50 {
	if x, ok := x.GetData().(*TestProto_Assignable50); ok {
		return x.Assignable50
	}
	return nil
}

func (x *TestProto) GetAssignable51() *Assignable51 {
	if x, ok := x.GetData().(*TestProto_Assignable51); ok {
		return x.Assignable51
	}
	return nil
}

func (x *TestProto) GetAssignable52() *Assignable52 {
	if x, ok := x.GetData().(*TestProto_Assignable52); ok {
		return x.Assignable52
	}
	return nil
}

func (x *TestProto) GetAssignable53() *Assignable53 {
	if x, ok := x.GetData().(*TestProto_Assignable53); ok {
		return x.Assignable53
	}
	return nil
}

func (x *TestProto) GetAssignable54() *Assignable54 {
	if x, ok := x.GetData().(*TestProto_Assignable54); ok {
		return x.Assignable54
	}
	return nil
}

func (x *TestProto) GetAssignable55() *Assignable55 {
	if x, ok := x.GetData().(*TestProto_Assignable55); ok {
		return x.Assignable55
	}
	return nil
}

func (x *TestProto) GetAssignable56() *Assignable56 {
	if x, ok := x.GetData().(*TestProto_Assignable56); ok {
		return x.Assignable56
	}
	return nil
}

func (x *TestProto) GetAssignable57() *Assignable57 {
	if x, ok := x.GetData().(*TestProto_Assignable57); ok {
		return x.Assignable57
	}
	return nil
}

func (x *TestProto) GetAssignable58() *Assignable58 {
	if x, ok := x.GetData().(*TestProto_Assignable58); ok {
		return x.Assignable58
	}
	return nil
}

func (x *TestProto) GetAssignable59() *Assignable59 {
	if x, ok := x.GetData().(*TestProto_Assignable59); ok {
		return x.Assignable59
	}
	return nil
}

func (x *TestProto) GetAssignable60() *Assignable60 {
	if x, ok := x.GetData().(*TestProto_Assignable60); ok {
		return x.Assignable60
	}
	return nil
}

func (x *TestProto) GetAssignable61() *Assignable61 {
	if x, ok := x.GetData().(*TestProto_Assignable61); ok {
		return x.Assignable61
	}
	return nil
}

func (x *TestProto) GetAssignable62() *Assignable62 {
	if x, ok := x.GetData().(*TestProto_Assignable62); ok {
		return x.Assignable62
	}
	return nil
}

func (x *TestProto) GetAssignable63() *Assignable63 {
	if x, ok := x.GetData().(*TestProto_Assignable63); ok {
		return x.Assignable63
	}
	return nil
}

func (x *TestProto) GetAssignable64() *Assignable64 {
	if x, ok := x.GetData().(*TestProto_Assignable64); ok {
		return x.Assignable64
	}
	return nil
}

func (x *TestProto) GetAssignable65() *Assignable65 {
	if x, ok := x.GetData().(*TestProto_Assignable65); ok {
		return x.Assignable65
	}
	return nil
}

func (x *TestProto) GetAssignable66() *Assignable66 {
	if x, ok := x.GetData().(*TestProto_Assignable66); ok {
		return x.Assignable66
	}
	return nil
}

func (x *TestProto) GetAssignable67() *Assignable67 {
	if x, ok := x.GetData().(*TestProto_Assignable67); ok {
		return x.Assignable67
	}
	return nil
}

func (x *TestProto) GetAssignable68() *Assignable68 {
	if x, ok := x.GetData().(*TestProto_Assignable68); ok {
		return x.Assignable68
	}
	return nil
}

func (x *TestProto) GetAssignable69() *Assignable69 {
	if x, ok := x.GetData().(*TestProto_Assignable69); ok {
		return x.Assignable69
	}
	return nil
}

func (x *TestProto) GetAssignable70() *Assignable70 {
	if x, ok := x.GetData().(*TestProto_Assignable70); ok {
		return x.Assignable70
	}
	return nil
}

func (x *TestProto) GetAssignable71() *Assignable71 {
	if x, ok := x.GetData().(*TestProto_Assignable71); ok {
		return x.Assignable71
	}
	return nil
}

func (x *TestProto) GetAssignable72() *Assignable72 {
	if x, ok := x.GetData().(*TestProto_Assignable72); ok {
		return x.Assignable72
	}
	return nil
}

func (x *TestProto) GetAssignable73() *Assignable73 {
	if x, ok := x.GetData().(*TestProto_Assignable73); ok {
		return x.Assignable73
	}
	return nil
}

func (x *TestProto) GetAssignable74() *Assignable74 {
	if x, ok := x.GetData().(*TestProto_Assignable74); ok {
		return x.Assignable74
	}
	return nil
}

func (x *TestProto) GetAssignable75() *Assignable75 {
	if x, ok := x.GetData().(*TestProto_Assignable75); ok {
		return x.Assignable75
	}
	return nil
}

func (x *TestProto) GetAssignable76() *Assignable76 {
	if x, ok := x.GetData().(*TestProto_Assignable76); ok {
		return x.Assignable76
	}
	return nil
}

func (x *TestProto) GetAssignable77() *Assignable77 {
	if x, ok := x.GetData().(*TestProto_Assignable77); ok {
		return x.Assignable77
	}
	return nil
}

func (x *TestProto) GetAssignable78() *Assignable78 {
	if x, ok := x.GetData().(*TestProto_Assignable78); ok {
		return x.Assignable78
	}
	return nil
}

func (x *TestProto) GetAssignable79() *Assignable79 {
	if x, ok := x.GetData().(*TestProto_Assignable79); ok {
		return x.Assignable79
	}
	return nil
}

func (x *TestProto) GetAssignable80() *Assignable80 {
	if x, ok := x.GetData().(*TestProto_Assignable80); ok {
		return x.Assignable80
	}
	return nil
}

func (x *TestProto) GetAssignable81() *Assignable81 {
	if x, ok := x.GetData().(*TestProto_Assignable81); ok {
		return x.Assignable81
	}
	return nil
}

func (x *TestProto) GetAssignable82() *Assignable82 {
	if x, ok := x.GetData().(*TestProto_Assignable82); ok {
		return x.Assignable82
	}
	return nil
}

func (x *TestProto) GetAssignable83() *Assignable83 {
	if x, ok := x.GetData().(*TestProto_Assignable83); ok {
		return x.Assignable83
	}
	return nil
}

func (x *TestProto) GetAssignable84() *Assignable84 {
	if x, ok := x.GetData().(*TestProto_Assignable84); ok {
		return x.Assignable84
	}
	return nil
}

func (x *TestProto) GetAssignable85() *Assignable85 {
	if x, ok := x.GetData().(*TestProto_Assignable85); ok {
		return x.Assignable85
	}
	return nil
}

func (x *TestProto) GetAssignable86() *Assignable86 {
	if x, ok := x.GetData().(*TestProto_Assignable86); ok {
		return x.Assignable86
	}
	return nil
}

func (x *TestProto) GetAssignable87() *Assignable87 {
	if x, ok := x.GetData().(*TestProto_Assignable87); ok {
		return x.Assignable87
	}
	return nil
}

func (x *TestProto) GetAssignable88() *Assignable88 {
	if x, ok := x.GetData().(*TestProto_Assignable88); ok {
		return x.Assignable88
	}
	return nil
}

func (x *TestProto) GetAssignable89() *Assignable89 {
	if x, ok := x.GetData().(*TestProto_Assignable89); ok {
		return x.Assignable89
	}
	return nil
}

func (x *TestProto) GetAssignable90() *Assignable90 {
	if x, ok := x.GetData().(*TestProto_Assignable90); ok {
		return x.Assignable90
	}
	return nil
}

func (x *TestProto) GetAssignable91() *Assignable91 {
	if x, ok := x.GetData().(*TestProto_Assignable91); ok {
		return x.Assignable91
	}
	return nil
}

func (x *TestProto) GetAssignable92() *Assignable92 {
	if x, ok := x.GetData().(*TestProto_Assignable92); ok {
		return x.Assignable92
	}
	return nil
}

func (x *TestProto) GetAssignable93() *Assignable93 {
	if x, ok := x.GetData().(*TestProto_Assignable93); ok {
		return x.Assignable93
	}
	return nil
}

func (x *TestProto) GetAssignable94() *Assignable94 {
	if x, ok := x.GetData().(*TestProto_Assignable94); ok {
		return x.Assignable94
	}
	return nil
}

func (x *TestProto) GetAssignable95() *Assignable95 {
	if x, ok := x.GetData().(*TestProto_Assignable95); ok {
		return x.Assignable95
	}
	return nil
}

func (x *TestProto) GetAssignable96() *Assignable96 {
	if x, ok := x.GetData().(*TestProto_Assignable96); ok {
		return x.Assignable96
	}
	return nil
}

func (x *TestProto) GetAssignable97() *Assignable97 {
	if x, ok := x.GetData().(*TestProto_Assignable97); ok {
		return x.Assignable97
	}
	return nil
}

func (x *TestProto) GetAssignable98() *Assignable98 {
	if x, ok := x.GetData().(*TestProto_Assignable98); ok {
		return x.Assignable98
	}
	return nil
}

func (x *TestProto) GetAssignable99() *Assignable99 {
	if x, ok := x.GetData().(*TestProto_Assignable99); ok {
		return x.Assignable99
	}
	return nil
}

func (x *TestProto) GetAssignable100() *Assignable100 {
	if x, ok := x.GetData().(*TestProto_Assignable100); ok {
		return x.Assignable100
	}
	return nil
}

type isTestProto_Data interface {
	isTestProto_Data()
}

type TestProto_Assignable1 struct {
	Assignable1 *Assignable1 `protobuf:"bytes,2,opt,name=assignable1,proto3,oneof"`
}

type TestProto_Assignable2 struct {
	Assignable2 *Assignable2 `protobuf:"bytes,3,opt,name=assignable2,proto3,oneof"`
}

type TestProto_Assignable3 struct {
	Assignable3 *Assignable3 `protobuf:"bytes,4,opt,name=assignable3,proto3,oneof"`
}

type TestProto_Assignable4 struct {
	Assignable4 *Assignable4 `protobuf:"bytes,5,opt,name=assignable4,proto3,oneof"`
}

type TestProto_Assignable5 struct {
	Assignable5 *Assignable5 `protobuf:"bytes,6,opt,name=assignable5,proto3,oneof"`
}

type TestProto_Assignable6 struct {
	Assignable6 *Assignable6 `protobuf:"bytes,7,opt,name=assignable6,proto3,oneof"`
}

type TestProto_Assignable7 struct {
	Assignable7 *Assignable7 `protobuf:"bytes,8,opt,name=assignable7,proto3,oneof"`
}

type TestProto_Assignable8 struct {
	Assignable8 *Assignable8 `protobuf:"bytes,9,opt,name=assignable8,proto3,oneof"`
}

type TestProto_Assignable9 struct {
	Assignable9 *Assignable9 `protobuf:"bytes,10,opt,name=assignable9,proto3,oneof"`
}

type TestProto_Assignable10 struct {
	Assignable10 *Assignable10 `protobuf:"bytes,11,opt,name=assignable10,proto3,oneof"`
}

type TestProto_Assignable11 struct {
	Assignable11 *Assignable11 `protobuf:"bytes,12,opt,name=assignable11,proto3,oneof"`
}

type TestProto_Assignable12 struct {
	Assignable12 *Assignable12 `protobuf:"bytes,13,opt,name=assignable12,proto3,oneof"`
}

type TestProto_Assignable13 struct {
	Assignable13 *Assignable13 `protobuf:"bytes,14,opt,name=assignable13,proto3,oneof"`
}

type TestProto_Assignable14 struct {
	Assignable14 *Assignable14 `protobuf:"bytes,15,opt,name=assignable14,proto3,oneof"`
}

type TestProto_Assignable15 struct {
	Assignable15 *Assignable15 `protobuf:"bytes,16,opt,name=assignable15,proto3,oneof"`
}

type TestProto_Assignable16 struct {
	Assignable16 *Assignable16 `protobuf:"bytes,17,opt,name=assignable16,proto3,oneof"`
}

type TestProto_Assignable17 struct {
	Assignable17 *Assignable17 `protobuf:"bytes,18,opt,name=assignable17,proto3,oneof"`
}

type TestProto_Assignable18 struct {
	Assignable18 *Assignable18 `protobuf:"bytes,19,opt,name=assignable18,proto3,oneof"`
}

type TestProto_Assignable19 struct {
	Assignable19 *Assignable19 `protobuf:"bytes,20,opt,name=assignable19,proto3,oneof"`
}

type TestProto_Assignable20 struct {
	Assignable20 *Assignable20 `protobuf:"bytes,21,opt,name=assignable20,proto3,oneof"`
}

type TestProto_Assignable21 struct {
	Assignable21 *Assignable21 `protobuf:"bytes,22,opt,name=assignable21,proto3,oneof"`
}

type TestProto_Assignable22 struct {
	Assignable22 *Assignable22 `protobuf:"bytes,23,opt,name=assignable22,proto3,oneof"`
}

type TestProto_Assignable23 struct {
	Assignable23 *Assignable23 `protobuf:"bytes,24,opt,name=assignable23,proto3,oneof"`
}

type TestProto_Assignable24 struct {
	Assignable24 *Assignable24 `protobuf:"bytes,25,opt,name=assignable24,proto3,oneof"`
}

type TestProto_Assignable25 struct {
	Assignable25 *Assignable25 `protobuf:"bytes,26,opt,name=assignable25,proto3,oneof"`
}

type TestProto_Assignable26 struct {
	Assignable26 *Assignable26 `protobuf:"bytes,27,opt,name=assignable26,proto3,oneof"`
}

type TestProto_Assignable27 struct {
	Assignable27 *Assignable27 `protobuf:"bytes,28,opt,name=assignable27,proto3,oneof"`
}

type TestProto_Assignable28 struct {
	Assignable28 *Assignable28 `protobuf:"bytes,29,opt,name=assignable28,proto3,oneof"`
}

type TestProto_Assignable29 struct {
	Assignable29 *Assignable29 `protobuf:"bytes,30,opt,name=assignable29,proto3,oneof"`
}

type TestProto_Assignable30 struct {
	Assignable30 *Assignable30 `protobuf:"bytes,31,opt,name=assignable30,proto3,oneof"`
}

type TestProto_Assignable31 struct {
	Assignable31 *Assignable31 `protobuf:"bytes,32,opt,name=assignable31,proto3,oneof"`
}

type TestProto_Assignable32 struct {
	Assignable32 *Assignable32 `protobuf:"bytes,33,opt,name=assignable32,proto3,oneof"`
}

type TestProto_Assignable33 struct {
	Assignable33 *Assignable33 `protobuf:"bytes,34,opt,name=assignable33,proto3,oneof"`
}

type TestProto_Assignable34 struct {
	Assignable34 *Assignable34 `protobuf:"bytes,35,opt,name=assignable34,proto3,oneof"`
}

type TestProto_Assignable35 struct {
	Assignable35 *Assignable35 `protobuf:"bytes,36,opt,name=assignable35,proto3,oneof"`
}

type TestProto_Assignable36 struct {
	Assignable36 *Assignable36 `protobuf:"bytes,37,opt,name=assignable36,proto3,oneof"`
}

type TestProto_Assignable37 struct {
	Assignable37 *Assignable37 `protobuf:"bytes,38,opt,name=assignable37,proto3,oneof"`
}

type TestProto_Assignable38 struct {
	Assignable38 *Assignable38 `protobuf:"bytes,39,opt,name=assignable38,proto3,oneof"`
}

type TestProto_Assignable39 struct {
	Assignable39 *Assignable39 `protobuf:"bytes,40,opt,name=assignable39,proto3,oneof"`
}

type TestProto_Assignable40 struct {
	Assignable40 *Assignable40 `protobuf:"bytes,41,opt,name=assignable40,proto3,oneof"`
}

type TestProto_Assignable41 struct {
	Assignable41 *Assignable41 `protobuf:"bytes,42,opt,name=assignable41,proto3,oneof"`
}

type TestProto_Assignable42 struct {
	Assignable42 *Assignable42 `protobuf:"bytes,43,opt,name=assignable42,proto3,oneof"`
}

type TestProto_Assignable43 struct {
	Assignable43 *Assignable43 `protobuf:"bytes,44,opt,name=assignable43,proto3,oneof"`
}

type TestProto_Assignable44 struct {
	Assignable44 *Assignable44 `protobuf:"bytes,45,opt,name=assignable44,proto3,oneof"`
}

type TestProto_Assignable45 struct {
	Assignable45 *Assignable45 `protobuf:"bytes,46,opt,name=assignable45,proto3,oneof"`
}

type TestProto_Assignable46 struct {
	Assignable46 *Assignable46 `protobuf:"bytes,47,opt,name=assignable46,proto3,oneof"`
}

type TestProto_Assignable47 struct {
	Assignable47 *Assignable47 `protobuf:"bytes,48,opt,name=assignable47,proto3,oneof"`
}

type TestProto_Assignable48 struct {
	Assignable48 *Assignable48 `protobuf:"bytes,49,opt,name=assignable48,proto3,oneof"`
}

type TestProto_Assignable49 struct {
	Assignable49 *Assignable49 `protobuf:"bytes,50,opt,name=assignable49,proto3,oneof"`
}

type TestProto_Assignable50 struct {
	Assignable50 *Assignable50 `protobuf:"bytes,51,opt,name=assignable50,proto3,oneof"`
}

type TestProto_Assignable51 struct {
	Assignable51 *Assignable51 `protobuf:"bytes,52,opt,name=assignable51,proto3,oneof"`
}

type TestProto_Assignable52 struct {
	Assignable52 *Assignable52 `protobuf:"bytes,53,opt,name=assignable52,proto3,oneof"`
}

type TestProto_Assignable53 struct {
	Assignable53 *Assignable53 `protobuf:"bytes,54,opt,name=assignable53,proto3,oneof"`
}

type TestProto_Assignable54 struct {
	Assignable54 *Assignable54 `protobuf:"bytes,55,opt,name=assignable54,proto3,oneof"`
}

type TestProto_Assignable55 struct {
	Assignable55 *Assignable55 `protobuf:"bytes,56,opt,name=assignable55,proto3,oneof"`
}

type TestProto_Assignable56 struct {
	Assignable56 *Assignable56 `protobuf:"bytes,57,opt,name=assignable56,proto3,oneof"`
}

type TestProto_Assignable57 struct {
	Assignable57 *Assignable57 `protobuf:"bytes,58,opt,name=assignable57,proto3,oneof"`
}

type TestProto_Assignable58 struct {
	Assignable58 *Assignable58 `protobuf:"bytes,59,opt,name=assignable58,proto3,oneof"`
}

type TestProto_Assignable59 struct {
	Assignable59 *Assignable59 `protobuf:"bytes,60,opt,name=assignable59,proto3,oneof"`
}

type TestProto_Assignable60 struct {
	Assignable60 *Assignable60 `protobuf:"bytes,61,opt,name=assignable60,proto3,oneof"`
}

type TestProto_Assignable61 struct {
	Assignable61 *Assignable61 `protobuf:"bytes,62,opt,name=assignable61,proto3,oneof"`
}

type TestProto_Assignable62 struct {
	Assignable62 *Assignable62 `protobuf:"bytes,63,opt,name=assignable62,proto3,oneof"`
}

type TestProto_Assignable63 struct {
	Assignable63 *Assignable63 `protobuf:"bytes,64,opt,name=assignable63,proto3,oneof"`
}

type TestProto_Assignable64 struct {
	Assignable64 *Assignable64 `protobuf:"bytes,65,opt,name=assignable64,proto3,oneof"`
}

type TestProto_Assignable65 struct {
	Assignable65 *Assignable65 `protobuf:"bytes,66,opt,name=assignable65,proto3,oneof"`
}

type TestProto_Assignable66 struct {
	Assignable66 *Assignable66 `protobuf:"bytes,67,opt,name=assignable66,proto3,oneof"`
}

type TestProto_Assignable67 struct {
	Assignable67 *Assignable67 `protobuf:"bytes,68,opt,name=assignable67,proto3,oneof"`
}

type TestProto_Assignable68 struct {
	Assignable68 *Assignable68 `protobuf:"bytes,69,opt,name=assignable68,proto3,oneof"`
}

type TestProto_Assignable69 struct {
	Assignable69 *Assignable69 `protobuf:"bytes,70,opt,name=assignable69,proto3,oneof"`
}

type TestProto_Assignable70 struct {
	Assignable70 *Assignable70 `protobuf:"bytes,71,opt,name=assignable70,proto3,oneof"`
}

type TestProto_Assignable71 struct {
	Assignable71 *Assignable71 `protobuf:"bytes,72,opt,name=assignable71,proto3,oneof"`
}

type TestProto_Assignable72 struct {
	Assignable72 *Assignable72 `protobuf:"bytes,73,opt,name=assignable72,proto3,oneof"`
}

type TestProto_Assignable73 struct {
	Assignable73 *Assignable73 `protobuf:"bytes,74,opt,name=assignable73,proto3,oneof"`
}

type TestProto_Assignable74 struct {
	Assignable74 *Assignable74 `protobuf:"bytes,75,opt,name=assignable74,proto3,oneof"`
}

type TestProto_Assignable75 struct {
	Assignable75 *Assignable75 `protobuf:"bytes,76,opt,name=assignable75,proto3,oneof"`
}

type TestProto_Assignable76 struct {
	Assignable76 *Assignable76 `protobuf:"bytes,77,opt,name=assignable76,proto3,oneof"`
}

type TestProto_Assignable77 struct {
	Assignable77 *Assignable77 `protobuf:"bytes,78,opt,name=assignable77,proto3,oneof"`
}

type TestProto_Assignable78 struct {
	Assignable78 *Assignable78 `protobuf:"bytes,79,opt,name=assignable78,proto3,oneof"`
}

type TestProto_Assignable79 struct {
	Assignable79 *Assignable79 `protobuf:"bytes,80,opt,name=assignable79,proto3,oneof"`
}

type TestProto_Assignable80 struct {
	Assignable80 *Assignable80 `protobuf:"bytes,81,opt,name=assignable80,proto3,oneof"`
}

type TestProto_Assignable81 struct {
	Assignable81 *Assignable81 `protobuf:"bytes,82,opt,name=assignable81,proto3,oneof"`
}

type TestProto_Assignable82 struct {
	Assignable82 *Assignable82 `protobuf:"bytes,83,opt,name=assignable82,proto3,oneof"`
}

type TestProto_Assignable83 struct {
	Assignable83 *Assignable83 `protobuf:"bytes,84,opt,name=assignable83,proto3,oneof"`
}

type TestProto_Assignable84 struct {
	Assignable84 *Assignable84 `protobuf:"bytes,85,opt,name=assignable84,proto3,oneof"`
}

type TestProto_Assignable85 struct {
	Assignable85 *Assignable85 `protobuf:"bytes,86,opt,name=assignable85,proto3,oneof"`
}

type TestProto_Assignable86 struct {
	Assignable86 *Assignable86 `protobuf:"bytes,87,opt,name=assignable86,proto3,oneof"`
}

type TestProto_Assignable87 struct {
	Assignable87 *Assignable87 `protobuf:"bytes,88,opt,name=assignable87,proto3,oneof"`
}

type TestProto_Assignable88 struct {
	Assignable88 *Assignable88 `protobuf:"bytes,89,opt,name=assignable88,proto3,oneof"`
}

type TestProto_Assignable89 struct {
	Assignable89 *Assignable89 `protobuf:"bytes,90,opt,name=assignable89,proto3,oneof"`
}

type TestProto_Assignable90 struct {
	Assignable90 *Assignable90 `protobuf:"bytes,91,opt,name=assignable90,proto3,oneof"`
}

type TestProto_Assignable91 struct {
	Assignable91 *Assignable91 `protobuf:"bytes,92,opt,name=assignable91,proto3,oneof"`
}

type TestProto_Assignable92 struct {
	Assignable92 *Assignable92 `protobuf:"bytes,93,opt,name=assignable92,proto3,oneof"`
}

type TestProto_Assignable93 struct {
	Assignable93 *Assignable93 `protobuf:"bytes,94,opt,name=assignable93,proto3,oneof"`
}

type TestProto_Assignable94 struct {
	Assignable94 *Assignable94 `protobuf:"bytes,95,opt,name=assignable94,proto3,oneof"`
}

type TestProto_Assignable95 struct {
	Assignable95 *Assignable95 `protobuf:"bytes,96,opt,name=assignable95,proto3,oneof"`
}

type TestProto_Assignable96 struct {
	Assignable96 *Assignable96 `protobuf:"bytes,97,opt,name=assignable96,proto3,oneof"`
}

type TestProto_Assignable97 struct {
	Assignable97 *Assignable97 `protobuf:"bytes,98,opt,name=assignable97,proto3,oneof"`
}

type TestProto_Assignable98 struct {
	Assignable98 *Assignable98 `protobuf:"bytes,99,opt,name=assignable98,proto3,oneof"`
}

type TestProto_Assignable99 struct {
	Assignable99 *Assignable99 `protobuf:"bytes,100,opt,name=assignable99,proto3,oneof"`
}

type TestProto_Assignable100 struct {
	Assignable100 *Assignable100 `protobuf:"bytes,101,opt,name=assignable100,proto3,oneof"`
}

func (*TestProto_Assignable1) isTestProto_Data() {}

func (*TestProto_Assignable2) isTestProto_Data() {}

func (*TestProto_Assignable3) isTestProto_Data() {}

func (*TestProto_Assignable4) isTestProto_Data() {}

func (*TestProto_Assignable5) isTestProto_Data() {}

func (*TestProto_Assignable6) isTestProto_Data() {}

func (*TestProto_Assignable7) isTestProto_Data() {}

func (*TestProto_Assignable8) isTestProto_Data() {}

func (*TestProto_Assignable9) isTestProto_Data() {}

func (*TestProto_Assignable10) isTestProto_Data() {}

func (*TestProto_Assignable11) isTestProto_Data() {}

func (*TestProto_Assignable12) isTestProto_Data() {}

func (*TestProto_Assignable13) isTestProto_Data() {}

func (*TestProto_Assignable14) isTestProto_Data() {}

func (*TestProto_Assignable15) isTestProto_Data() {}

func (*TestProto_Assignable16) isTestProto_Data() {}

func (*TestProto_Assignable17) isTestProto_Data() {}

func (*TestProto_Assignable18) isTestProto_Data() {}

func (*TestProto_Assignable19) isTestProto_Data() {}

func (*TestProto_Assignable20) isTestProto_Data() {}

func (*TestProto_Assignable21) isTestProto_Data() {}

func (*TestProto_Assignable22) isTestProto_Data() {}

func (*TestProto_Assignable23) isTestProto_Data() {}

func (*TestProto_Assignable24) isTestProto_Data() {}

func (*TestProto_Assignable25) isTestProto_Data() {}

func (*TestProto_Assignable26) isTestProto_Data() {}

func (*TestProto_Assignable27) isTestProto_Data() {}

func (*TestProto_Assignable28) isTestProto_Data() {}

func (*TestProto_Assignable29) isTestProto_Data() {}

func (*TestProto_Assignable30) isTestProto_Data() {}

func (*TestProto_Assignable31) isTestProto_Data() {}

func (*TestProto_Assignable32) isTestProto_Data() {}

func (*TestProto_Assignable33) isTestProto_Data() {}

func (*TestProto_Assignable34) isTestProto_Data() {}

func (*TestProto_Assignable35) isTestProto_Data() {}

func (*TestProto_Assignable36) isTestProto_Data() {}

func (*TestProto_Assignable37) isTestProto_Data() {}

func (*TestProto_Assignable38) isTestProto_Data() {}

func (*TestProto_Assignable39) isTestProto_Data() {}

func (*TestProto_Assignable40) isTestProto_Data() {}

func (*TestProto_Assignable41) isTestProto_Data() {}

func (*TestProto_Assignable42) isTestProto_Data() {}

func (*TestProto_Assignable43) isTestProto_Data() {}

func (*TestProto_Assignable44) isTestProto_Data() {}

func (*TestProto_Assignable45) isTestProto_Data() {}

func (*TestProto_Assignable46) isTestProto_Data() {}

func (*TestProto_Assignable47) isTestProto_Data() {}

func (*TestProto_Assignable48) isTestProto_Data() {}

func (*TestProto_Assignable49) isTestProto_Data() {}

func (*TestProto_Assignable50) isTestProto_Data() {}

func (*TestProto_Assignable51) isTestProto_Data() {}

func (*TestProto_Assignable52) isTestProto_Data() {}

func (*TestProto_Assignable53) isTestProto_Data() {}

func (*TestProto_Assignable54) isTestProto_Data() {}

func (*TestProto_Assignable55) isTestProto_Data() {}

func (*TestProto_Assignable56) isTestProto_Data() {}

func (*TestProto_Assignable57) isTestProto_Data() {}

func (*TestProto_Assignable58) isTestProto_Data() {}

func (*TestProto_Assignable59) isTestProto_Data() {}

func (*TestProto_Assignable60) isTestProto_Data() {}

func (*TestProto_Assignable61) isTestProto_Data() {}

func (*TestProto_Assignable62) isTestProto_Data() {}

func (*TestProto_Assignable63) isTestProto_Data() {}

func (*TestProto_Assignable64) isTestProto_Data() {}

func (*TestProto_Assignable65) isTestProto_Data() {}

func (*TestProto_Assignable66) isTestProto_Data() {}

func (*TestProto_Assignable67) isTestProto_Data() {}

func (*TestProto_Assignable68) isTestProto_Data() {}

func (*TestProto_Assignable69) isTestProto_Data() {}

func (*TestProto_Assignable70) isTestProto_Data() {}

func (*TestProto_Assignable71) isTestProto_Data() {}

func (*TestProto_Assignable72) isTestProto_Data() {}

func (*TestProto_Assignable73) isTestProto_Data() {}

func (*TestProto_Assignable74) isTestProto_Data() {}

func (*TestProto_Assignable75) isTestProto_Data() {}

func (*TestProto_Assignable76) isTestProto_Data() {}

func (*TestProto_Assignable77) isTestProto_Data() {}

func (*TestProto_Assignable78) isTestProto_Data() {}

func (*TestProto_Assignable79) isTestProto_Data() {}

func (*TestProto_Assignable80) isTestProto_Data() {}

func (*TestProto_Assignable81) isTestProto_Data() {}

func (*TestProto_Assignable82) isTestProto_Data() {}

func (*TestProto_Assignable83) isTestProto_Data() {}

func (*TestProto_Assignable84) isTestProto_Data() {}

func (*TestProto_Assignable85) isTestProto_Data() {}

func (*TestProto_Assignable86) isTestProto_Data() {}

func (*TestProto_Assignable87) isTestProto_Data() {}

func (*TestProto_Assignable88) isTestProto_Data() {}

func (*TestProto_Assignable89) isTestProto_Data() {}

func (*TestProto_Assignable90) isTestProto_Data() {}

func (*TestProto_Assignable91) isTestProto_Data() {}

func (*TestProto_Assignable92) isTestProto_Data() {}

func (*TestProto_Assignable93) isTestProto_Data() {}

func (*TestProto_Assignable94) isTestProto_Data() {}

func (*TestProto_Assignable95) isTestProto_Data() {}

func (*TestProto_Assignable96) isTestProto_Data() {}

func (*TestProto_Assignable97) isTestProto_Data() {}

func (*TestProto_Assignable98) isTestProto_Data() {}

func (*TestProto_Assignable99) isTestProto_Data() {}

func (*TestProto_Assignable100) isTestProto_Data() {}

type Assignable1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data1 string `protobuf:"bytes,1,opt,name=data1,proto3" json:"data1,omitempty"`
}

func (x *Assignable1) Reset() {
	*x = Assignable1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable1) ProtoMessage() {}

func (x *Assignable1) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable1.ProtoReflect.Descriptor instead.
func (*Assignable1) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{3}
}

func (x *Assignable1) GetData1() string {
	if x != nil {
		return x.Data1
	}
	return ""
}

type Assignable2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data2 string `protobuf:"bytes,1,opt,name=data2,proto3" json:"data2,omitempty"`
}

func (x *Assignable2) Reset() {
	*x = Assignable2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable2) ProtoMessage() {}

func (x *Assignable2) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable2.ProtoReflect.Descriptor instead.
func (*Assignable2) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{4}
}

func (x *Assignable2) GetData2() string {
	if x != nil {
		return x.Data2
	}
	return ""
}

type Assignable3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data3 string `protobuf:"bytes,1,opt,name=data3,proto3" json:"data3,omitempty"`
}

func (x *Assignable3) Reset() {
	*x = Assignable3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable3) ProtoMessage() {}

func (x *Assignable3) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable3.ProtoReflect.Descriptor instead.
func (*Assignable3) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{5}
}

func (x *Assignable3) GetData3() string {
	if x != nil {
		return x.Data3
	}
	return ""
}

type Assignable4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data4 string `protobuf:"bytes,1,opt,name=data4,proto3" json:"data4,omitempty"`
}

func (x *Assignable4) Reset() {
	*x = Assignable4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable4) ProtoMessage() {}

func (x *Assignable4) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable4.ProtoReflect.Descriptor instead.
func (*Assignable4) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{6}
}

func (x *Assignable4) GetData4() string {
	if x != nil {
		return x.Data4
	}
	return ""
}

type Assignable5 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data5 string `protobuf:"bytes,1,opt,name=data5,proto3" json:"data5,omitempty"`
}

func (x *Assignable5) Reset() {
	*x = Assignable5{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable5) ProtoMessage() {}

func (x *Assignable5) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable5.ProtoReflect.Descriptor instead.
func (*Assignable5) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{7}
}

func (x *Assignable5) GetData5() string {
	if x != nil {
		return x.Data5
	}
	return ""
}

type Assignable6 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data6 string `protobuf:"bytes,1,opt,name=data6,proto3" json:"data6,omitempty"`
}

func (x *Assignable6) Reset() {
	*x = Assignable6{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable6) ProtoMessage() {}

func (x *Assignable6) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable6.ProtoReflect.Descriptor instead.
func (*Assignable6) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{8}
}

func (x *Assignable6) GetData6() string {
	if x != nil {
		return x.Data6
	}
	return ""
}

type Assignable7 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data7 string `protobuf:"bytes,1,opt,name=data7,proto3" json:"data7,omitempty"`
}

func (x *Assignable7) Reset() {
	*x = Assignable7{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable7) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable7) ProtoMessage() {}

func (x *Assignable7) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable7.ProtoReflect.Descriptor instead.
func (*Assignable7) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{9}
}

func (x *Assignable7) GetData7() string {
	if x != nil {
		return x.Data7
	}
	return ""
}

type Assignable8 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data8 string `protobuf:"bytes,1,opt,name=data8,proto3" json:"data8,omitempty"`
}

func (x *Assignable8) Reset() {
	*x = Assignable8{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable8) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable8) ProtoMessage() {}

func (x *Assignable8) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable8.ProtoReflect.Descriptor instead.
func (*Assignable8) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{10}
}

func (x *Assignable8) GetData8() string {
	if x != nil {
		return x.Data8
	}
	return ""
}

type Assignable9 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data9 string `protobuf:"bytes,1,opt,name=data9,proto3" json:"data9,omitempty"`
}

func (x *Assignable9) Reset() {
	*x = Assignable9{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable9) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable9) ProtoMessage() {}

func (x *Assignable9) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable9.ProtoReflect.Descriptor instead.
func (*Assignable9) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{11}
}

func (x *Assignable9) GetData9() string {
	if x != nil {
		return x.Data9
	}
	return ""
}

type Assignable10 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data10 string `protobuf:"bytes,1,opt,name=data10,proto3" json:"data10,omitempty"`
}

func (x *Assignable10) Reset() {
	*x = Assignable10{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable10) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable10) ProtoMessage() {}

func (x *Assignable10) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable10.ProtoReflect.Descriptor instead.
func (*Assignable10) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{12}
}

func (x *Assignable10) GetData10() string {
	if x != nil {
		return x.Data10
	}
	return ""
}

type Assignable11 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data11 string `protobuf:"bytes,1,opt,name=data11,proto3" json:"data11,omitempty"`
}

func (x *Assignable11) Reset() {
	*x = Assignable11{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable11) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable11) ProtoMessage() {}

func (x *Assignable11) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable11.ProtoReflect.Descriptor instead.
func (*Assignable11) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{13}
}

func (x *Assignable11) GetData11() string {
	if x != nil {
		return x.Data11
	}
	return ""
}

type Assignable12 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data12 string `protobuf:"bytes,1,opt,name=data12,proto3" json:"data12,omitempty"`
}

func (x *Assignable12) Reset() {
	*x = Assignable12{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable12) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable12) ProtoMessage() {}

func (x *Assignable12) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable12.ProtoReflect.Descriptor instead.
func (*Assignable12) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{14}
}

func (x *Assignable12) GetData12() string {
	if x != nil {
		return x.Data12
	}
	return ""
}

type Assignable13 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data13 string `protobuf:"bytes,1,opt,name=data13,proto3" json:"data13,omitempty"`
}

func (x *Assignable13) Reset() {
	*x = Assignable13{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable13) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable13) ProtoMessage() {}

func (x *Assignable13) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable13.ProtoReflect.Descriptor instead.
func (*Assignable13) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{15}
}

func (x *Assignable13) GetData13() string {
	if x != nil {
		return x.Data13
	}
	return ""
}

type Assignable14 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data14 string `protobuf:"bytes,1,opt,name=data14,proto3" json:"data14,omitempty"`
}

func (x *Assignable14) Reset() {
	*x = Assignable14{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable14) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable14) ProtoMessage() {}

func (x *Assignable14) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable14.ProtoReflect.Descriptor instead.
func (*Assignable14) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{16}
}

func (x *Assignable14) GetData14() string {
	if x != nil {
		return x.Data14
	}
	return ""
}

type Assignable15 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data15 string `protobuf:"bytes,1,opt,name=data15,proto3" json:"data15,omitempty"`
}

func (x *Assignable15) Reset() {
	*x = Assignable15{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable15) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable15) ProtoMessage() {}

func (x *Assignable15) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable15.ProtoReflect.Descriptor instead.
func (*Assignable15) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{17}
}

func (x *Assignable15) GetData15() string {
	if x != nil {
		return x.Data15
	}
	return ""
}

type Assignable16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data16 string `protobuf:"bytes,1,opt,name=data16,proto3" json:"data16,omitempty"`
}

func (x *Assignable16) Reset() {
	*x = Assignable16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable16) ProtoMessage() {}

func (x *Assignable16) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable16.ProtoReflect.Descriptor instead.
func (*Assignable16) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{18}
}

func (x *Assignable16) GetData16() string {
	if x != nil {
		return x.Data16
	}
	return ""
}

type Assignable17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data17 string `protobuf:"bytes,1,opt,name=data17,proto3" json:"data17,omitempty"`
}

func (x *Assignable17) Reset() {
	*x = Assignable17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable17) ProtoMessage() {}

func (x *Assignable17) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable17.ProtoReflect.Descriptor instead.
func (*Assignable17) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{19}
}

func (x *Assignable17) GetData17() string {
	if x != nil {
		return x.Data17
	}
	return ""
}

type Assignable18 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data18 string `protobuf:"bytes,1,opt,name=data18,proto3" json:"data18,omitempty"`
}

func (x *Assignable18) Reset() {
	*x = Assignable18{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable18) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable18) ProtoMessage() {}

func (x *Assignable18) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable18.ProtoReflect.Descriptor instead.
func (*Assignable18) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{20}
}

func (x *Assignable18) GetData18() string {
	if x != nil {
		return x.Data18
	}
	return ""
}

type Assignable19 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data19 string `protobuf:"bytes,1,opt,name=data19,proto3" json:"data19,omitempty"`
}

func (x *Assignable19) Reset() {
	*x = Assignable19{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable19) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable19) ProtoMessage() {}

func (x *Assignable19) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable19.ProtoReflect.Descriptor instead.
func (*Assignable19) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{21}
}

func (x *Assignable19) GetData19() string {
	if x != nil {
		return x.Data19
	}
	return ""
}

type Assignable20 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data20 string `protobuf:"bytes,1,opt,name=data20,proto3" json:"data20,omitempty"`
}

func (x *Assignable20) Reset() {
	*x = Assignable20{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable20) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable20) ProtoMessage() {}

func (x *Assignable20) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable20.ProtoReflect.Descriptor instead.
func (*Assignable20) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{22}
}

func (x *Assignable20) GetData20() string {
	if x != nil {
		return x.Data20
	}
	return ""
}

type Assignable21 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data21 string `protobuf:"bytes,1,opt,name=data21,proto3" json:"data21,omitempty"`
}

func (x *Assignable21) Reset() {
	*x = Assignable21{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable21) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable21) ProtoMessage() {}

func (x *Assignable21) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable21.ProtoReflect.Descriptor instead.
func (*Assignable21) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{23}
}

func (x *Assignable21) GetData21() string {
	if x != nil {
		return x.Data21
	}
	return ""
}

type Assignable22 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data22 string `protobuf:"bytes,1,opt,name=data22,proto3" json:"data22,omitempty"`
}

func (x *Assignable22) Reset() {
	*x = Assignable22{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable22) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable22) ProtoMessage() {}

func (x *Assignable22) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable22.ProtoReflect.Descriptor instead.
func (*Assignable22) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{24}
}

func (x *Assignable22) GetData22() string {
	if x != nil {
		return x.Data22
	}
	return ""
}

type Assignable23 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data23 string `protobuf:"bytes,1,opt,name=data23,proto3" json:"data23,omitempty"`
}

func (x *Assignable23) Reset() {
	*x = Assignable23{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable23) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable23) ProtoMessage() {}

func (x *Assignable23) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable23.ProtoReflect.Descriptor instead.
func (*Assignable23) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{25}
}

func (x *Assignable23) GetData23() string {
	if x != nil {
		return x.Data23
	}
	return ""
}

type Assignable24 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data24 string `protobuf:"bytes,1,opt,name=data24,proto3" json:"data24,omitempty"`
}

func (x *Assignable24) Reset() {
	*x = Assignable24{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable24) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable24) ProtoMessage() {}

func (x *Assignable24) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable24.ProtoReflect.Descriptor instead.
func (*Assignable24) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{26}
}

func (x *Assignable24) GetData24() string {
	if x != nil {
		return x.Data24
	}
	return ""
}

type Assignable25 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data25 string `protobuf:"bytes,1,opt,name=data25,proto3" json:"data25,omitempty"`
}

func (x *Assignable25) Reset() {
	*x = Assignable25{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable25) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable25) ProtoMessage() {}

func (x *Assignable25) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable25.ProtoReflect.Descriptor instead.
func (*Assignable25) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{27}
}

func (x *Assignable25) GetData25() string {
	if x != nil {
		return x.Data25
	}
	return ""
}

type Assignable26 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data26 string `protobuf:"bytes,1,opt,name=data26,proto3" json:"data26,omitempty"`
}

func (x *Assignable26) Reset() {
	*x = Assignable26{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable26) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable26) ProtoMessage() {}

func (x *Assignable26) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable26.ProtoReflect.Descriptor instead.
func (*Assignable26) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{28}
}

func (x *Assignable26) GetData26() string {
	if x != nil {
		return x.Data26
	}
	return ""
}

type Assignable27 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data27 string `protobuf:"bytes,1,opt,name=data27,proto3" json:"data27,omitempty"`
}

func (x *Assignable27) Reset() {
	*x = Assignable27{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable27) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable27) ProtoMessage() {}

func (x *Assignable27) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable27.ProtoReflect.Descriptor instead.
func (*Assignable27) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{29}
}

func (x *Assignable27) GetData27() string {
	if x != nil {
		return x.Data27
	}
	return ""
}

type Assignable28 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data28 string `protobuf:"bytes,1,opt,name=data28,proto3" json:"data28,omitempty"`
}

func (x *Assignable28) Reset() {
	*x = Assignable28{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable28) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable28) ProtoMessage() {}

func (x *Assignable28) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable28.ProtoReflect.Descriptor instead.
func (*Assignable28) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{30}
}

func (x *Assignable28) GetData28() string {
	if x != nil {
		return x.Data28
	}
	return ""
}

type Assignable29 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data29 string `protobuf:"bytes,1,opt,name=data29,proto3" json:"data29,omitempty"`
}

func (x *Assignable29) Reset() {
	*x = Assignable29{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable29) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable29) ProtoMessage() {}

func (x *Assignable29) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable29.ProtoReflect.Descriptor instead.
func (*Assignable29) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{31}
}

func (x *Assignable29) GetData29() string {
	if x != nil {
		return x.Data29
	}
	return ""
}

type Assignable30 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data30 string `protobuf:"bytes,1,opt,name=data30,proto3" json:"data30,omitempty"`
}

func (x *Assignable30) Reset() {
	*x = Assignable30{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable30) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable30) ProtoMessage() {}

func (x *Assignable30) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable30.ProtoReflect.Descriptor instead.
func (*Assignable30) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{32}
}

func (x *Assignable30) GetData30() string {
	if x != nil {
		return x.Data30
	}
	return ""
}

type Assignable31 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data31 string `protobuf:"bytes,1,opt,name=data31,proto3" json:"data31,omitempty"`
}

func (x *Assignable31) Reset() {
	*x = Assignable31{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable31) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable31) ProtoMessage() {}

func (x *Assignable31) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable31.ProtoReflect.Descriptor instead.
func (*Assignable31) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{33}
}

func (x *Assignable31) GetData31() string {
	if x != nil {
		return x.Data31
	}
	return ""
}

type Assignable32 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data32 string `protobuf:"bytes,1,opt,name=data32,proto3" json:"data32,omitempty"`
}

func (x *Assignable32) Reset() {
	*x = Assignable32{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable32) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable32) ProtoMessage() {}

func (x *Assignable32) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable32.ProtoReflect.Descriptor instead.
func (*Assignable32) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{34}
}

func (x *Assignable32) GetData32() string {
	if x != nil {
		return x.Data32
	}
	return ""
}

type Assignable33 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data33 string `protobuf:"bytes,1,opt,name=data33,proto3" json:"data33,omitempty"`
}

func (x *Assignable33) Reset() {
	*x = Assignable33{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable33) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable33) ProtoMessage() {}

func (x *Assignable33) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable33.ProtoReflect.Descriptor instead.
func (*Assignable33) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{35}
}

func (x *Assignable33) GetData33() string {
	if x != nil {
		return x.Data33
	}
	return ""
}

type Assignable34 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data34 string `protobuf:"bytes,1,opt,name=data34,proto3" json:"data34,omitempty"`
}

func (x *Assignable34) Reset() {
	*x = Assignable34{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable34) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable34) ProtoMessage() {}

func (x *Assignable34) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable34.ProtoReflect.Descriptor instead.
func (*Assignable34) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{36}
}

func (x *Assignable34) GetData34() string {
	if x != nil {
		return x.Data34
	}
	return ""
}

type Assignable35 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data35 string `protobuf:"bytes,1,opt,name=data35,proto3" json:"data35,omitempty"`
}

func (x *Assignable35) Reset() {
	*x = Assignable35{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable35) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable35) ProtoMessage() {}

func (x *Assignable35) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable35.ProtoReflect.Descriptor instead.
func (*Assignable35) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{37}
}

func (x *Assignable35) GetData35() string {
	if x != nil {
		return x.Data35
	}
	return ""
}

type Assignable36 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data36 string `protobuf:"bytes,1,opt,name=data36,proto3" json:"data36,omitempty"`
}

func (x *Assignable36) Reset() {
	*x = Assignable36{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable36) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable36) ProtoMessage() {}

func (x *Assignable36) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable36.ProtoReflect.Descriptor instead.
func (*Assignable36) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{38}
}

func (x *Assignable36) GetData36() string {
	if x != nil {
		return x.Data36
	}
	return ""
}

type Assignable37 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data37 string `protobuf:"bytes,1,opt,name=data37,proto3" json:"data37,omitempty"`
}

func (x *Assignable37) Reset() {
	*x = Assignable37{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable37) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable37) ProtoMessage() {}

func (x *Assignable37) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable37.ProtoReflect.Descriptor instead.
func (*Assignable37) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{39}
}

func (x *Assignable37) GetData37() string {
	if x != nil {
		return x.Data37
	}
	return ""
}

type Assignable38 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data38 string `protobuf:"bytes,1,opt,name=data38,proto3" json:"data38,omitempty"`
}

func (x *Assignable38) Reset() {
	*x = Assignable38{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable38) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable38) ProtoMessage() {}

func (x *Assignable38) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable38.ProtoReflect.Descriptor instead.
func (*Assignable38) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{40}
}

func (x *Assignable38) GetData38() string {
	if x != nil {
		return x.Data38
	}
	return ""
}

type Assignable39 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data39 string `protobuf:"bytes,1,opt,name=data39,proto3" json:"data39,omitempty"`
}

func (x *Assignable39) Reset() {
	*x = Assignable39{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable39) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable39) ProtoMessage() {}

func (x *Assignable39) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable39.ProtoReflect.Descriptor instead.
func (*Assignable39) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{41}
}

func (x *Assignable39) GetData39() string {
	if x != nil {
		return x.Data39
	}
	return ""
}

type Assignable40 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data40 string `protobuf:"bytes,1,opt,name=data40,proto3" json:"data40,omitempty"`
}

func (x *Assignable40) Reset() {
	*x = Assignable40{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable40) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable40) ProtoMessage() {}

func (x *Assignable40) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable40.ProtoReflect.Descriptor instead.
func (*Assignable40) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{42}
}

func (x *Assignable40) GetData40() string {
	if x != nil {
		return x.Data40
	}
	return ""
}

type Assignable41 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data41 string `protobuf:"bytes,1,opt,name=data41,proto3" json:"data41,omitempty"`
}

func (x *Assignable41) Reset() {
	*x = Assignable41{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable41) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable41) ProtoMessage() {}

func (x *Assignable41) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable41.ProtoReflect.Descriptor instead.
func (*Assignable41) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{43}
}

func (x *Assignable41) GetData41() string {
	if x != nil {
		return x.Data41
	}
	return ""
}

type Assignable42 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data42 string `protobuf:"bytes,1,opt,name=data42,proto3" json:"data42,omitempty"`
}

func (x *Assignable42) Reset() {
	*x = Assignable42{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable42) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable42) ProtoMessage() {}

func (x *Assignable42) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable42.ProtoReflect.Descriptor instead.
func (*Assignable42) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{44}
}

func (x *Assignable42) GetData42() string {
	if x != nil {
		return x.Data42
	}
	return ""
}

type Assignable43 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data43 string `protobuf:"bytes,1,opt,name=data43,proto3" json:"data43,omitempty"`
}

func (x *Assignable43) Reset() {
	*x = Assignable43{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable43) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable43) ProtoMessage() {}

func (x *Assignable43) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable43.ProtoReflect.Descriptor instead.
func (*Assignable43) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{45}
}

func (x *Assignable43) GetData43() string {
	if x != nil {
		return x.Data43
	}
	return ""
}

type Assignable44 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data44 string `protobuf:"bytes,1,opt,name=data44,proto3" json:"data44,omitempty"`
}

func (x *Assignable44) Reset() {
	*x = Assignable44{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable44) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable44) ProtoMessage() {}

func (x *Assignable44) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable44.ProtoReflect.Descriptor instead.
func (*Assignable44) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{46}
}

func (x *Assignable44) GetData44() string {
	if x != nil {
		return x.Data44
	}
	return ""
}

type Assignable45 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data45 string `protobuf:"bytes,1,opt,name=data45,proto3" json:"data45,omitempty"`
}

func (x *Assignable45) Reset() {
	*x = Assignable45{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable45) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable45) ProtoMessage() {}

func (x *Assignable45) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable45.ProtoReflect.Descriptor instead.
func (*Assignable45) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{47}
}

func (x *Assignable45) GetData45() string {
	if x != nil {
		return x.Data45
	}
	return ""
}

type Assignable46 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data46 string `protobuf:"bytes,1,opt,name=data46,proto3" json:"data46,omitempty"`
}

func (x *Assignable46) Reset() {
	*x = Assignable46{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable46) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable46) ProtoMessage() {}

func (x *Assignable46) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable46.ProtoReflect.Descriptor instead.
func (*Assignable46) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{48}
}

func (x *Assignable46) GetData46() string {
	if x != nil {
		return x.Data46
	}
	return ""
}

type Assignable47 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data47 string `protobuf:"bytes,1,opt,name=data47,proto3" json:"data47,omitempty"`
}

func (x *Assignable47) Reset() {
	*x = Assignable47{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable47) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable47) ProtoMessage() {}

func (x *Assignable47) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable47.ProtoReflect.Descriptor instead.
func (*Assignable47) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{49}
}

func (x *Assignable47) GetData47() string {
	if x != nil {
		return x.Data47
	}
	return ""
}

type Assignable48 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data48 string `protobuf:"bytes,1,opt,name=data48,proto3" json:"data48,omitempty"`
}

func (x *Assignable48) Reset() {
	*x = Assignable48{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable48) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable48) ProtoMessage() {}

func (x *Assignable48) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable48.ProtoReflect.Descriptor instead.
func (*Assignable48) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{50}
}

func (x *Assignable48) GetData48() string {
	if x != nil {
		return x.Data48
	}
	return ""
}

type Assignable49 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data49 string `protobuf:"bytes,1,opt,name=data49,proto3" json:"data49,omitempty"`
}

func (x *Assignable49) Reset() {
	*x = Assignable49{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable49) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable49) ProtoMessage() {}

func (x *Assignable49) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable49.ProtoReflect.Descriptor instead.
func (*Assignable49) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{51}
}

func (x *Assignable49) GetData49() string {
	if x != nil {
		return x.Data49
	}
	return ""
}

type Assignable50 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data50 string `protobuf:"bytes,1,opt,name=data50,proto3" json:"data50,omitempty"`
}

func (x *Assignable50) Reset() {
	*x = Assignable50{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable50) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable50) ProtoMessage() {}

func (x *Assignable50) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable50.ProtoReflect.Descriptor instead.
func (*Assignable50) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{52}
}

func (x *Assignable50) GetData50() string {
	if x != nil {
		return x.Data50
	}
	return ""
}

type Assignable51 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data51 string `protobuf:"bytes,1,opt,name=data51,proto3" json:"data51,omitempty"`
}

func (x *Assignable51) Reset() {
	*x = Assignable51{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable51) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable51) ProtoMessage() {}

func (x *Assignable51) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable51.ProtoReflect.Descriptor instead.
func (*Assignable51) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{53}
}

func (x *Assignable51) GetData51() string {
	if x != nil {
		return x.Data51
	}
	return ""
}

type Assignable52 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data52 string `protobuf:"bytes,1,opt,name=data52,proto3" json:"data52,omitempty"`
}

func (x *Assignable52) Reset() {
	*x = Assignable52{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable52) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable52) ProtoMessage() {}

func (x *Assignable52) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable52.ProtoReflect.Descriptor instead.
func (*Assignable52) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{54}
}

func (x *Assignable52) GetData52() string {
	if x != nil {
		return x.Data52
	}
	return ""
}

type Assignable53 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data53 string `protobuf:"bytes,1,opt,name=data53,proto3" json:"data53,omitempty"`
}

func (x *Assignable53) Reset() {
	*x = Assignable53{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable53) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable53) ProtoMessage() {}

func (x *Assignable53) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable53.ProtoReflect.Descriptor instead.
func (*Assignable53) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{55}
}

func (x *Assignable53) GetData53() string {
	if x != nil {
		return x.Data53
	}
	return ""
}

type Assignable54 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data54 string `protobuf:"bytes,1,opt,name=data54,proto3" json:"data54,omitempty"`
}

func (x *Assignable54) Reset() {
	*x = Assignable54{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable54) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable54) ProtoMessage() {}

func (x *Assignable54) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable54.ProtoReflect.Descriptor instead.
func (*Assignable54) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{56}
}

func (x *Assignable54) GetData54() string {
	if x != nil {
		return x.Data54
	}
	return ""
}

type Assignable55 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data55 string `protobuf:"bytes,1,opt,name=data55,proto3" json:"data55,omitempty"`
}

func (x *Assignable55) Reset() {
	*x = Assignable55{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable55) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable55) ProtoMessage() {}

func (x *Assignable55) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable55.ProtoReflect.Descriptor instead.
func (*Assignable55) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{57}
}

func (x *Assignable55) GetData55() string {
	if x != nil {
		return x.Data55
	}
	return ""
}

type Assignable56 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data56 string `protobuf:"bytes,1,opt,name=data56,proto3" json:"data56,omitempty"`
}

func (x *Assignable56) Reset() {
	*x = Assignable56{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable56) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable56) ProtoMessage() {}

func (x *Assignable56) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable56.ProtoReflect.Descriptor instead.
func (*Assignable56) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{58}
}

func (x *Assignable56) GetData56() string {
	if x != nil {
		return x.Data56
	}
	return ""
}

type Assignable57 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data57 string `protobuf:"bytes,1,opt,name=data57,proto3" json:"data57,omitempty"`
}

func (x *Assignable57) Reset() {
	*x = Assignable57{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable57) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable57) ProtoMessage() {}

func (x *Assignable57) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable57.ProtoReflect.Descriptor instead.
func (*Assignable57) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{59}
}

func (x *Assignable57) GetData57() string {
	if x != nil {
		return x.Data57
	}
	return ""
}

type Assignable58 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data58 string `protobuf:"bytes,1,opt,name=data58,proto3" json:"data58,omitempty"`
}

func (x *Assignable58) Reset() {
	*x = Assignable58{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable58) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable58) ProtoMessage() {}

func (x *Assignable58) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable58.ProtoReflect.Descriptor instead.
func (*Assignable58) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{60}
}

func (x *Assignable58) GetData58() string {
	if x != nil {
		return x.Data58
	}
	return ""
}

type Assignable59 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data59 string `protobuf:"bytes,1,opt,name=data59,proto3" json:"data59,omitempty"`
}

func (x *Assignable59) Reset() {
	*x = Assignable59{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable59) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable59) ProtoMessage() {}

func (x *Assignable59) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable59.ProtoReflect.Descriptor instead.
func (*Assignable59) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{61}
}

func (x *Assignable59) GetData59() string {
	if x != nil {
		return x.Data59
	}
	return ""
}

type Assignable60 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data60 string `protobuf:"bytes,1,opt,name=data60,proto3" json:"data60,omitempty"`
}

func (x *Assignable60) Reset() {
	*x = Assignable60{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable60) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable60) ProtoMessage() {}

func (x *Assignable60) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable60.ProtoReflect.Descriptor instead.
func (*Assignable60) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{62}
}

func (x *Assignable60) GetData60() string {
	if x != nil {
		return x.Data60
	}
	return ""
}

type Assignable61 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data61 string `protobuf:"bytes,1,opt,name=data61,proto3" json:"data61,omitempty"`
}

func (x *Assignable61) Reset() {
	*x = Assignable61{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable61) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable61) ProtoMessage() {}

func (x *Assignable61) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable61.ProtoReflect.Descriptor instead.
func (*Assignable61) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{63}
}

func (x *Assignable61) GetData61() string {
	if x != nil {
		return x.Data61
	}
	return ""
}

type Assignable62 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data62 string `protobuf:"bytes,1,opt,name=data62,proto3" json:"data62,omitempty"`
}

func (x *Assignable62) Reset() {
	*x = Assignable62{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable62) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable62) ProtoMessage() {}

func (x *Assignable62) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable62.ProtoReflect.Descriptor instead.
func (*Assignable62) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{64}
}

func (x *Assignable62) GetData62() string {
	if x != nil {
		return x.Data62
	}
	return ""
}

type Assignable63 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data63 string `protobuf:"bytes,1,opt,name=data63,proto3" json:"data63,omitempty"`
}

func (x *Assignable63) Reset() {
	*x = Assignable63{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable63) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable63) ProtoMessage() {}

func (x *Assignable63) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable63.ProtoReflect.Descriptor instead.
func (*Assignable63) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{65}
}

func (x *Assignable63) GetData63() string {
	if x != nil {
		return x.Data63
	}
	return ""
}

type Assignable64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data64 string `protobuf:"bytes,1,opt,name=data64,proto3" json:"data64,omitempty"`
}

func (x *Assignable64) Reset() {
	*x = Assignable64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable64) ProtoMessage() {}

func (x *Assignable64) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable64.ProtoReflect.Descriptor instead.
func (*Assignable64) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{66}
}

func (x *Assignable64) GetData64() string {
	if x != nil {
		return x.Data64
	}
	return ""
}

type Assignable65 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data65 string `protobuf:"bytes,1,opt,name=data65,proto3" json:"data65,omitempty"`
}

func (x *Assignable65) Reset() {
	*x = Assignable65{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable65) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable65) ProtoMessage() {}

func (x *Assignable65) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable65.ProtoReflect.Descriptor instead.
func (*Assignable65) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{67}
}

func (x *Assignable65) GetData65() string {
	if x != nil {
		return x.Data65
	}
	return ""
}

type Assignable66 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data66 string `protobuf:"bytes,1,opt,name=data66,proto3" json:"data66,omitempty"`
}

func (x *Assignable66) Reset() {
	*x = Assignable66{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable66) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable66) ProtoMessage() {}

func (x *Assignable66) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable66.ProtoReflect.Descriptor instead.
func (*Assignable66) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{68}
}

func (x *Assignable66) GetData66() string {
	if x != nil {
		return x.Data66
	}
	return ""
}

type Assignable67 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data67 string `protobuf:"bytes,1,opt,name=data67,proto3" json:"data67,omitempty"`
}

func (x *Assignable67) Reset() {
	*x = Assignable67{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable67) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable67) ProtoMessage() {}

func (x *Assignable67) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable67.ProtoReflect.Descriptor instead.
func (*Assignable67) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{69}
}

func (x *Assignable67) GetData67() string {
	if x != nil {
		return x.Data67
	}
	return ""
}

type Assignable68 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data68 string `protobuf:"bytes,1,opt,name=data68,proto3" json:"data68,omitempty"`
}

func (x *Assignable68) Reset() {
	*x = Assignable68{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable68) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable68) ProtoMessage() {}

func (x *Assignable68) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable68.ProtoReflect.Descriptor instead.
func (*Assignable68) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{70}
}

func (x *Assignable68) GetData68() string {
	if x != nil {
		return x.Data68
	}
	return ""
}

type Assignable69 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data69 string `protobuf:"bytes,1,opt,name=data69,proto3" json:"data69,omitempty"`
}

func (x *Assignable69) Reset() {
	*x = Assignable69{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable69) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable69) ProtoMessage() {}

func (x *Assignable69) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable69.ProtoReflect.Descriptor instead.
func (*Assignable69) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{71}
}

func (x *Assignable69) GetData69() string {
	if x != nil {
		return x.Data69
	}
	return ""
}

type Assignable70 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data70 string `protobuf:"bytes,1,opt,name=data70,proto3" json:"data70,omitempty"`
}

func (x *Assignable70) Reset() {
	*x = Assignable70{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable70) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable70) ProtoMessage() {}

func (x *Assignable70) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable70.ProtoReflect.Descriptor instead.
func (*Assignable70) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{72}
}

func (x *Assignable70) GetData70() string {
	if x != nil {
		return x.Data70
	}
	return ""
}

type Assignable71 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data71 string `protobuf:"bytes,1,opt,name=data71,proto3" json:"data71,omitempty"`
}

func (x *Assignable71) Reset() {
	*x = Assignable71{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable71) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable71) ProtoMessage() {}

func (x *Assignable71) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable71.ProtoReflect.Descriptor instead.
func (*Assignable71) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{73}
}

func (x *Assignable71) GetData71() string {
	if x != nil {
		return x.Data71
	}
	return ""
}

type Assignable72 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data72 string `protobuf:"bytes,1,opt,name=data72,proto3" json:"data72,omitempty"`
}

func (x *Assignable72) Reset() {
	*x = Assignable72{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable72) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable72) ProtoMessage() {}

func (x *Assignable72) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable72.ProtoReflect.Descriptor instead.
func (*Assignable72) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{74}
}

func (x *Assignable72) GetData72() string {
	if x != nil {
		return x.Data72
	}
	return ""
}

type Assignable73 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data73 string `protobuf:"bytes,1,opt,name=data73,proto3" json:"data73,omitempty"`
}

func (x *Assignable73) Reset() {
	*x = Assignable73{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable73) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable73) ProtoMessage() {}

func (x *Assignable73) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable73.ProtoReflect.Descriptor instead.
func (*Assignable73) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{75}
}

func (x *Assignable73) GetData73() string {
	if x != nil {
		return x.Data73
	}
	return ""
}

type Assignable74 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data74 string `protobuf:"bytes,1,opt,name=data74,proto3" json:"data74,omitempty"`
}

func (x *Assignable74) Reset() {
	*x = Assignable74{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable74) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable74) ProtoMessage() {}

func (x *Assignable74) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable74.ProtoReflect.Descriptor instead.
func (*Assignable74) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{76}
}

func (x *Assignable74) GetData74() string {
	if x != nil {
		return x.Data74
	}
	return ""
}

type Assignable75 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data75 string `protobuf:"bytes,1,opt,name=data75,proto3" json:"data75,omitempty"`
}

func (x *Assignable75) Reset() {
	*x = Assignable75{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable75) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable75) ProtoMessage() {}

func (x *Assignable75) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable75.ProtoReflect.Descriptor instead.
func (*Assignable75) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{77}
}

func (x *Assignable75) GetData75() string {
	if x != nil {
		return x.Data75
	}
	return ""
}

type Assignable76 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data76 string `protobuf:"bytes,1,opt,name=data76,proto3" json:"data76,omitempty"`
}

func (x *Assignable76) Reset() {
	*x = Assignable76{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable76) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable76) ProtoMessage() {}

func (x *Assignable76) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable76.ProtoReflect.Descriptor instead.
func (*Assignable76) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{78}
}

func (x *Assignable76) GetData76() string {
	if x != nil {
		return x.Data76
	}
	return ""
}

type Assignable77 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data77 string `protobuf:"bytes,1,opt,name=data77,proto3" json:"data77,omitempty"`
}

func (x *Assignable77) Reset() {
	*x = Assignable77{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable77) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable77) ProtoMessage() {}

func (x *Assignable77) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable77.ProtoReflect.Descriptor instead.
func (*Assignable77) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{79}
}

func (x *Assignable77) GetData77() string {
	if x != nil {
		return x.Data77
	}
	return ""
}

type Assignable78 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data78 string `protobuf:"bytes,1,opt,name=data78,proto3" json:"data78,omitempty"`
}

func (x *Assignable78) Reset() {
	*x = Assignable78{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable78) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable78) ProtoMessage() {}

func (x *Assignable78) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable78.ProtoReflect.Descriptor instead.
func (*Assignable78) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{80}
}

func (x *Assignable78) GetData78() string {
	if x != nil {
		return x.Data78
	}
	return ""
}

type Assignable79 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data79 string `protobuf:"bytes,1,opt,name=data79,proto3" json:"data79,omitempty"`
}

func (x *Assignable79) Reset() {
	*x = Assignable79{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable79) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable79) ProtoMessage() {}

func (x *Assignable79) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable79.ProtoReflect.Descriptor instead.
func (*Assignable79) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{81}
}

func (x *Assignable79) GetData79() string {
	if x != nil {
		return x.Data79
	}
	return ""
}

type Assignable80 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data80 string `protobuf:"bytes,1,opt,name=data80,proto3" json:"data80,omitempty"`
}

func (x *Assignable80) Reset() {
	*x = Assignable80{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable80) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable80) ProtoMessage() {}

func (x *Assignable80) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable80.ProtoReflect.Descriptor instead.
func (*Assignable80) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{82}
}

func (x *Assignable80) GetData80() string {
	if x != nil {
		return x.Data80
	}
	return ""
}

type Assignable81 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data81 string `protobuf:"bytes,1,opt,name=data81,proto3" json:"data81,omitempty"`
}

func (x *Assignable81) Reset() {
	*x = Assignable81{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable81) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable81) ProtoMessage() {}

func (x *Assignable81) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable81.ProtoReflect.Descriptor instead.
func (*Assignable81) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{83}
}

func (x *Assignable81) GetData81() string {
	if x != nil {
		return x.Data81
	}
	return ""
}

type Assignable82 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data82 string `protobuf:"bytes,1,opt,name=data82,proto3" json:"data82,omitempty"`
}

func (x *Assignable82) Reset() {
	*x = Assignable82{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable82) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable82) ProtoMessage() {}

func (x *Assignable82) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable82.ProtoReflect.Descriptor instead.
func (*Assignable82) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{84}
}

func (x *Assignable82) GetData82() string {
	if x != nil {
		return x.Data82
	}
	return ""
}

type Assignable83 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data83 string `protobuf:"bytes,1,opt,name=data83,proto3" json:"data83,omitempty"`
}

func (x *Assignable83) Reset() {
	*x = Assignable83{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable83) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable83) ProtoMessage() {}

func (x *Assignable83) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable83.ProtoReflect.Descriptor instead.
func (*Assignable83) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{85}
}

func (x *Assignable83) GetData83() string {
	if x != nil {
		return x.Data83
	}
	return ""
}

type Assignable84 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data84 string `protobuf:"bytes,1,opt,name=data84,proto3" json:"data84,omitempty"`
}

func (x *Assignable84) Reset() {
	*x = Assignable84{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable84) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable84) ProtoMessage() {}

func (x *Assignable84) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable84.ProtoReflect.Descriptor instead.
func (*Assignable84) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{86}
}

func (x *Assignable84) GetData84() string {
	if x != nil {
		return x.Data84
	}
	return ""
}

type Assignable85 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data85 string `protobuf:"bytes,1,opt,name=data85,proto3" json:"data85,omitempty"`
}

func (x *Assignable85) Reset() {
	*x = Assignable85{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable85) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable85) ProtoMessage() {}

func (x *Assignable85) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable85.ProtoReflect.Descriptor instead.
func (*Assignable85) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{87}
}

func (x *Assignable85) GetData85() string {
	if x != nil {
		return x.Data85
	}
	return ""
}

type Assignable86 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data86 string `protobuf:"bytes,1,opt,name=data86,proto3" json:"data86,omitempty"`
}

func (x *Assignable86) Reset() {
	*x = Assignable86{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable86) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable86) ProtoMessage() {}

func (x *Assignable86) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable86.ProtoReflect.Descriptor instead.
func (*Assignable86) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{88}
}

func (x *Assignable86) GetData86() string {
	if x != nil {
		return x.Data86
	}
	return ""
}

type Assignable87 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data87 string `protobuf:"bytes,1,opt,name=data87,proto3" json:"data87,omitempty"`
}

func (x *Assignable87) Reset() {
	*x = Assignable87{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable87) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable87) ProtoMessage() {}

func (x *Assignable87) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable87.ProtoReflect.Descriptor instead.
func (*Assignable87) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{89}
}

func (x *Assignable87) GetData87() string {
	if x != nil {
		return x.Data87
	}
	return ""
}

type Assignable88 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data88 string `protobuf:"bytes,1,opt,name=data88,proto3" json:"data88,omitempty"`
}

func (x *Assignable88) Reset() {
	*x = Assignable88{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable88) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable88) ProtoMessage() {}

func (x *Assignable88) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable88.ProtoReflect.Descriptor instead.
func (*Assignable88) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{90}
}

func (x *Assignable88) GetData88() string {
	if x != nil {
		return x.Data88
	}
	return ""
}

type Assignable89 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data89 string `protobuf:"bytes,1,opt,name=data89,proto3" json:"data89,omitempty"`
}

func (x *Assignable89) Reset() {
	*x = Assignable89{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable89) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable89) ProtoMessage() {}

func (x *Assignable89) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable89.ProtoReflect.Descriptor instead.
func (*Assignable89) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{91}
}

func (x *Assignable89) GetData89() string {
	if x != nil {
		return x.Data89
	}
	return ""
}

type Assignable90 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data90 string `protobuf:"bytes,1,opt,name=data90,proto3" json:"data90,omitempty"`
}

func (x *Assignable90) Reset() {
	*x = Assignable90{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable90) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable90) ProtoMessage() {}

func (x *Assignable90) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable90.ProtoReflect.Descriptor instead.
func (*Assignable90) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{92}
}

func (x *Assignable90) GetData90() string {
	if x != nil {
		return x.Data90
	}
	return ""
}

type Assignable91 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data91 string `protobuf:"bytes,1,opt,name=data91,proto3" json:"data91,omitempty"`
}

func (x *Assignable91) Reset() {
	*x = Assignable91{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable91) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable91) ProtoMessage() {}

func (x *Assignable91) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable91.ProtoReflect.Descriptor instead.
func (*Assignable91) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{93}
}

func (x *Assignable91) GetData91() string {
	if x != nil {
		return x.Data91
	}
	return ""
}

type Assignable92 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data92 string `protobuf:"bytes,1,opt,name=data92,proto3" json:"data92,omitempty"`
}

func (x *Assignable92) Reset() {
	*x = Assignable92{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable92) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable92) ProtoMessage() {}

func (x *Assignable92) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable92.ProtoReflect.Descriptor instead.
func (*Assignable92) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{94}
}

func (x *Assignable92) GetData92() string {
	if x != nil {
		return x.Data92
	}
	return ""
}

type Assignable93 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data93 string `protobuf:"bytes,1,opt,name=data93,proto3" json:"data93,omitempty"`
}

func (x *Assignable93) Reset() {
	*x = Assignable93{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable93) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable93) ProtoMessage() {}

func (x *Assignable93) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable93.ProtoReflect.Descriptor instead.
func (*Assignable93) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{95}
}

func (x *Assignable93) GetData93() string {
	if x != nil {
		return x.Data93
	}
	return ""
}

type Assignable94 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data94 string `protobuf:"bytes,1,opt,name=data94,proto3" json:"data94,omitempty"`
}

func (x *Assignable94) Reset() {
	*x = Assignable94{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable94) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable94) ProtoMessage() {}

func (x *Assignable94) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable94.ProtoReflect.Descriptor instead.
func (*Assignable94) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{96}
}

func (x *Assignable94) GetData94() string {
	if x != nil {
		return x.Data94
	}
	return ""
}

type Assignable95 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data95 string `protobuf:"bytes,1,opt,name=data95,proto3" json:"data95,omitempty"`
}

func (x *Assignable95) Reset() {
	*x = Assignable95{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable95) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable95) ProtoMessage() {}

func (x *Assignable95) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable95.ProtoReflect.Descriptor instead.
func (*Assignable95) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{97}
}

func (x *Assignable95) GetData95() string {
	if x != nil {
		return x.Data95
	}
	return ""
}

type Assignable96 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data96 string `protobuf:"bytes,1,opt,name=data96,proto3" json:"data96,omitempty"`
}

func (x *Assignable96) Reset() {
	*x = Assignable96{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable96) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable96) ProtoMessage() {}

func (x *Assignable96) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable96.ProtoReflect.Descriptor instead.
func (*Assignable96) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{98}
}

func (x *Assignable96) GetData96() string {
	if x != nil {
		return x.Data96
	}
	return ""
}

type Assignable97 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data97 string `protobuf:"bytes,1,opt,name=data97,proto3" json:"data97,omitempty"`
}

func (x *Assignable97) Reset() {
	*x = Assignable97{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable97) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable97) ProtoMessage() {}

func (x *Assignable97) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable97.ProtoReflect.Descriptor instead.
func (*Assignable97) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{99}
}

func (x *Assignable97) GetData97() string {
	if x != nil {
		return x.Data97
	}
	return ""
}

type Assignable98 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data98 string `protobuf:"bytes,1,opt,name=data98,proto3" json:"data98,omitempty"`
}

func (x *Assignable98) Reset() {
	*x = Assignable98{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable98) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable98) ProtoMessage() {}

func (x *Assignable98) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable98.ProtoReflect.Descriptor instead.
func (*Assignable98) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{100}
}

func (x *Assignable98) GetData98() string {
	if x != nil {
		return x.Data98
	}
	return ""
}

type Assignable99 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data99 string `protobuf:"bytes,1,opt,name=data99,proto3" json:"data99,omitempty"`
}

func (x *Assignable99) Reset() {
	*x = Assignable99{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable99) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable99) ProtoMessage() {}

func (x *Assignable99) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable99.ProtoReflect.Descriptor instead.
func (*Assignable99) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{101}
}

func (x *Assignable99) GetData99() string {
	if x != nil {
		return x.Data99
	}
	return ""
}

type Assignable100 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data100 string `protobuf:"bytes,1,opt,name=data100,proto3" json:"data100,omitempty"`
}

func (x *Assignable100) Reset() {
	*x = Assignable100{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignable100) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignable100) ProtoMessage() {}

func (x *Assignable100) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignable100.ProtoReflect.Descriptor instead.
func (*Assignable100) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{102}
}

func (x *Assignable100) GetData100() string {
	if x != nil {
		return x.Data100
	}
	return ""
}

type Test2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Test *Test2Proto `protobuf:"bytes,1,opt,name=test,proto3" json:"test,omitempty"`
}

func (x *Test2Request) Reset() {
	*x = Test2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Test2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Test2Request) ProtoMessage() {}

func (x *Test2Request) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Test2Request.ProtoReflect.Descriptor instead.
func (*Test2Request) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{103}
}

func (x *Test2Request) GetTest() *Test2Proto {
	if x != nil {
		return x.Test
	}
	return nil
}

type Test2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Test2Response) Reset() {
	*x = Test2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Test2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Test2Response) ProtoMessage() {}

func (x *Test2Response) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Test2Response.ProtoReflect.Descriptor instead.
func (*Test2Response) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{104}
}

type Test2Proto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Types that are assignable to Data:
	//
	//	*Test2Proto_Assignable1
	Data isTest2Proto_Data `protobuf_oneof:"data"`
}

func (x *Test2Proto) Reset() {
	*x = Test2Proto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testapi_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Test2Proto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Test2Proto) ProtoMessage() {}

func (x *Test2Proto) ProtoReflect() protoreflect.Message {
	mi := &file_testapi_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Test2Proto.ProtoReflect.Descriptor instead.
func (*Test2Proto) Descriptor() ([]byte, []int) {
	return file_testapi_proto_rawDescGZIP(), []int{105}
}

func (x *Test2Proto) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (m *Test2Proto) GetData() isTest2Proto_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Test2Proto) GetAssignable1() *Assignable1 {
	if x, ok := x.GetData().(*Test2Proto_Assignable1); ok {
		return x.Assignable1
	}
	return nil
}

type isTest2Proto_Data interface {
	isTest2Proto_Data()
}

type Test2Proto_Assignable1 struct {
	Assignable1 *Assignable1 `protobuf:"bytes,2,opt,name=assignable1,proto3,oneof"`
}

func (*Test2Proto_Assignable1) isTest2Proto_Data() {}

var File_testapi_proto protoreflect.FileDescriptor

var file_testapi_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x22, 0x35, 0x0a, 0x0b, 0x54, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x65, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e,
	0x54, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x04, 0x74, 0x65, 0x73, 0x74, 0x22,
	0x0e, 0x0a, 0x0c, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xe3, 0x2f, 0x0a, 0x09, 0x54, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x38, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69,
	0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x48, 0x00, 0x52, 0x0b,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x12, 0x38, 0x0a, 0x0b, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x32, 0x12, 0x38, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33,
	0x48, 0x00, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x12,
	0x38, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x12, 0x38, 0x0a, 0x0b, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x35, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x35, 0x12, 0x38, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x36, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x48, 0x00,
	0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x12, 0x38, 0x0a,
	0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x12, 0x38, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x38, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x38, 0x12, 0x38, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69,
	0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x48, 0x00, 0x52, 0x0b,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x12, 0x3b, 0x0a, 0x0c, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x30, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x30, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x30, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x31, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x31, 0x31, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x31, 0x31, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x31, 0x32, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x31, 0x32, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x31, 0x32, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x31, 0x33, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x33, 0x48,
	0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x33, 0x12,
	0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x34, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x34, 0x48, 0x00, 0x52, 0x0c,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x34, 0x12, 0x3b, 0x0a, 0x0c,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x35, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x35, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x35, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x36, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x31, 0x36, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x31, 0x36, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x31, 0x37, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x31, 0x37, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x31, 0x37, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x31, 0x38, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x38,
	0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x38,
	0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x39,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69,
	0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x39, 0x48, 0x00, 0x52,
	0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x39, 0x12, 0x3b, 0x0a,
	0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x30, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x30, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x30, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x31, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x31, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x31, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x32, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x32, 0x32, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x32, 0x32, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x32, 0x33, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32,
	0x33, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32,
	0x33, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32,
	0x34, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70,
	0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x34, 0x48, 0x00,
	0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x34, 0x12, 0x3b,
	0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x35, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x35, 0x48, 0x00, 0x52, 0x0c, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x35, 0x12, 0x3b, 0x0a, 0x0c, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x36, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x36, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x36, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x37, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x32, 0x37, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x32, 0x37, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x32, 0x38, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x32, 0x38, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x32, 0x38, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x32, 0x39, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x39, 0x48,
	0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x39, 0x12,
	0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x30, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x30, 0x48, 0x00, 0x52, 0x0c,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x30, 0x12, 0x3b, 0x0a, 0x0c,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x31, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x31, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x31, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x32, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x33, 0x32, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x33, 0x32, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x33, 0x33, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x33, 0x33, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x33, 0x33, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x33, 0x34, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x34,
	0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x34,
	0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x35,
	0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69,
	0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x35, 0x48, 0x00, 0x52,
	0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x35, 0x12, 0x3b, 0x0a,
	0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x36, 0x18, 0x25, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x36, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x36, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x37, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x37, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x37, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x38, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x33, 0x38, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x33, 0x38, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x33, 0x39, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33,
	0x39, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33,
	0x39, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34,
	0x30, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70,
	0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x30, 0x48, 0x00,
	0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x30, 0x12, 0x3b,
	0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x31, 0x18, 0x2a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x31, 0x48, 0x00, 0x52, 0x0c, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x31, 0x12, 0x3b, 0x0a, 0x0c, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x32, 0x18, 0x2b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x32, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x32, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x33, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x34, 0x33, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x34, 0x33, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x34, 0x34, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x34, 0x34, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x34, 0x34, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x34, 0x35, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x35, 0x48,
	0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x35, 0x12,
	0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x36, 0x18,
	0x2f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x36, 0x48, 0x00, 0x52, 0x0c,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x36, 0x12, 0x3b, 0x0a, 0x0c,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x37, 0x18, 0x30, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x37, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x37, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x38, 0x18, 0x31, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x34, 0x38, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x34, 0x38, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x34, 0x39, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x34, 0x39, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x34, 0x39, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x35, 0x30, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x30,
	0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x30,
	0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x31,
	0x18, 0x34, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69,
	0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x31, 0x48, 0x00, 0x52,
	0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x31, 0x12, 0x3b, 0x0a,
	0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x32, 0x18, 0x35, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x32, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x32, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x33, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x33, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x33, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x34, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x35, 0x34, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x35, 0x34, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x35, 0x35, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35,
	0x35, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35,
	0x35, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35,
	0x36, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70,
	0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x36, 0x48, 0x00,
	0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x36, 0x12, 0x3b,
	0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x37, 0x18, 0x3a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x37, 0x48, 0x00, 0x52, 0x0c, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x37, 0x12, 0x3b, 0x0a, 0x0c, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x38, 0x18, 0x3b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x38, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x38, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x39, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x35, 0x39, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x35, 0x39, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x36, 0x30, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x36, 0x30, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x36, 0x30, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x36, 0x31, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x31, 0x48,
	0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x31, 0x12,
	0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x32, 0x18,
	0x3f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x32, 0x48, 0x00, 0x52, 0x0c,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x32, 0x12, 0x3b, 0x0a, 0x0c,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x33, 0x18, 0x40, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x33, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x33, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x34, 0x18, 0x41, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x36, 0x34, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x36, 0x34, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x36, 0x35, 0x18, 0x42, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x36, 0x35, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x36, 0x35, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x36, 0x36, 0x18, 0x43, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x36,
	0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x36,
	0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x37,
	0x18, 0x44, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69,
	0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x37, 0x48, 0x00, 0x52,
	0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x37, 0x12, 0x3b, 0x0a,
	0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x38, 0x18, 0x45, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x38, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x38, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x39, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x39, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x39, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x30, 0x18, 0x47, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x37, 0x30, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x37, 0x30, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x37, 0x31, 0x18, 0x48, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37,
	0x31, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37,
	0x31, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37,
	0x32, 0x18, 0x49, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70,
	0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x32, 0x48, 0x00,
	0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x32, 0x12, 0x3b,
	0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x33, 0x18, 0x4a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x33, 0x48, 0x00, 0x52, 0x0c, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x33, 0x12, 0x3b, 0x0a, 0x0c, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x34, 0x18, 0x4b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x34, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x34, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x35, 0x18, 0x4c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x37, 0x35, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x37, 0x35, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x37, 0x36, 0x18, 0x4d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x37, 0x36, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x37, 0x36, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x37, 0x37, 0x18, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x37, 0x48,
	0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x37, 0x12,
	0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x38, 0x18,
	0x4f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x38, 0x48, 0x00, 0x52, 0x0c,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x38, 0x12, 0x3b, 0x0a, 0x0c,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x39, 0x18, 0x50, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x39, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x39, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x30, 0x18, 0x51, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x38, 0x30, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x38, 0x30, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x38, 0x31, 0x18, 0x52, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x38, 0x31, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x38, 0x31, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x38, 0x32, 0x18, 0x53, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x32,
	0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x32,
	0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x33,
	0x18, 0x54, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69,
	0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x33, 0x48, 0x00, 0x52,
	0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x33, 0x12, 0x3b, 0x0a,
	0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x34, 0x18, 0x55, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x34, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x34, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x35, 0x18, 0x56, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x35, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x35, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x36, 0x18, 0x57, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x38, 0x36, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x38, 0x36, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x38, 0x37, 0x18, 0x58, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38,
	0x37, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38,
	0x37, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38,
	0x38, 0x18, 0x59, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70,
	0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x38, 0x48, 0x00,
	0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x38, 0x12, 0x3b,
	0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x39, 0x18, 0x5a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x39, 0x48, 0x00, 0x52, 0x0c, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x39, 0x12, 0x3b, 0x0a, 0x0c, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x30, 0x18, 0x5b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x30, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x30, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x31, 0x18, 0x5c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x39, 0x31, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x39, 0x31, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x39, 0x32, 0x18, 0x5d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x39, 0x32, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x39, 0x32, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x39, 0x33, 0x18, 0x5e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x33, 0x48,
	0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x33, 0x12,
	0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x34, 0x18,
	0x5f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x34, 0x48, 0x00, 0x52, 0x0c,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x34, 0x12, 0x3b, 0x0a, 0x0c,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x35, 0x18, 0x60, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x35, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x35, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x36, 0x18, 0x61, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x39, 0x36, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x39, 0x36, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x39, 0x37, 0x18, 0x62, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x39, 0x37, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x39, 0x37, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x39, 0x38, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x38,
	0x48, 0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x38,
	0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x39,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69,
	0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x39, 0x48, 0x00, 0x52,
	0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x39, 0x12, 0x3e, 0x0a,
	0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x30, 0x30, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x30, 0x30, 0x48, 0x00, 0x52, 0x0d,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x30, 0x30, 0x42, 0x06, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x23, 0x0a, 0x0b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x31, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x31, 0x22, 0x23, 0x0a, 0x0b, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74,
	0x61, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x22,
	0x23, 0x0a, 0x0b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x33, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64,
	0x61, 0x74, 0x61, 0x33, 0x22, 0x23, 0x0a, 0x0b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x34, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x34, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x34, 0x22, 0x23, 0x0a, 0x0b, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61,
	0x35, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x35, 0x22, 0x23,
	0x0a, 0x0b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x12, 0x14, 0x0a,
	0x05, 0x64, 0x61, 0x74, 0x61, 0x36, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61,
	0x74, 0x61, 0x36, 0x22, 0x23, 0x0a, 0x0b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x37, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x37, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x37, 0x22, 0x23, 0x0a, 0x0b, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x38,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x38, 0x22, 0x23, 0x0a,
	0x0b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x12, 0x14, 0x0a, 0x05,
	0x64, 0x61, 0x74, 0x61, 0x39, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61, 0x74,
	0x61, 0x39, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x31, 0x30, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x31, 0x30, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x31, 0x30, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x31, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x31, 0x31, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x31, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x31, 0x32, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x31, 0x32, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x31, 0x33, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x31, 0x33, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x31, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x31, 0x34, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x31, 0x34, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x31, 0x35, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x31, 0x35, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x31, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x31, 0x36, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x31, 0x36, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x37, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x31, 0x37, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x31, 0x37, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x31, 0x38, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x31, 0x38, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x31, 0x38, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x39, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x31, 0x39, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x31, 0x39, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x32, 0x30, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x32, 0x30, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x32, 0x30, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x32, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x32, 0x31, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x32, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x32, 0x32, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x32, 0x32, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x32, 0x33, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x32, 0x33, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x32, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x32, 0x34, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x32, 0x34, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x32, 0x35, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x32, 0x35, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x32, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x32, 0x36, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x32, 0x36, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x37, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x32, 0x37, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x32, 0x37, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x32, 0x38, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x32, 0x38, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x32, 0x38, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x32, 0x39, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x32, 0x39, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x32, 0x39, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x33, 0x30, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x33, 0x30, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x33, 0x30, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x33, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x33, 0x31, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x33, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x33, 0x32, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x33, 0x32, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x33, 0x33, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x33, 0x33, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x33, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x33, 0x34, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x33, 0x34, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x33, 0x35, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x33, 0x35, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x33, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x33, 0x36, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x33, 0x36, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x37, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x33, 0x37, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x33, 0x37, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x33, 0x38, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x33, 0x38, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x33, 0x38, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x33, 0x39, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x33, 0x39, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x33, 0x39, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x34, 0x30, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x34, 0x30, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x34, 0x30, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x34, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x34, 0x31, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x34, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x34, 0x32, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x34, 0x32, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x34, 0x33, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x34, 0x33, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x34, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x34, 0x34, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x34, 0x34, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x34, 0x35, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x34, 0x35, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x34, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x34, 0x36, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x34, 0x36, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x37, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x34, 0x37, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x34, 0x37, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x34, 0x38, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x34, 0x38, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x34, 0x38, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x34, 0x39, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x34, 0x39, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x34, 0x39, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x35, 0x30, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x35, 0x30, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x35, 0x30, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x35, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x35, 0x31, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x35, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x35, 0x32, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x35, 0x32, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x35, 0x33, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x35, 0x33, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x35, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x35, 0x34, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x35, 0x34, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x35, 0x35, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x35, 0x35, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x35, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x35, 0x36, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x35, 0x36, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x37, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x35, 0x37, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x35, 0x37, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x35, 0x38, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x35, 0x38, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x35, 0x38, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x35, 0x39, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x35, 0x39, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x35, 0x39, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x36, 0x30, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x36, 0x30, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x36, 0x30, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x36, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x36, 0x31, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x36, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x36, 0x32, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x36, 0x32, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x36, 0x33, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x36, 0x33, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x36, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x36, 0x34, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x36, 0x34, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x36, 0x35, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x36, 0x35, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x36, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x36, 0x36, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x36, 0x36, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x37, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x36, 0x37, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x36, 0x37, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x36, 0x38, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x36, 0x38, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x36, 0x38, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x36, 0x39, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x36, 0x39, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x36, 0x39, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x37, 0x30, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x37, 0x30, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x37, 0x30, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x37, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x37, 0x31, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x37, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x37, 0x32, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x37, 0x32, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x37, 0x33, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x37, 0x33, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x37, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x37, 0x34, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x37, 0x34, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x37, 0x35, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x37, 0x35, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x37, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x37, 0x36, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x37, 0x36, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x37, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x37, 0x37, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x37, 0x37, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x37, 0x38, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x37, 0x38, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x37, 0x38, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x37, 0x39, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x37, 0x39, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x37, 0x39, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x38, 0x30, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x38, 0x30, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x38, 0x30, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x38, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x38, 0x31, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x38, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x38, 0x32, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x38, 0x32, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x38, 0x33, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x38, 0x33, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x38, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x38, 0x34, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x38, 0x34, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x38, 0x35, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x38, 0x35, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x38, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x38, 0x36, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x38, 0x36, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x37, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x38, 0x37, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x38, 0x37, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x38, 0x38, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x38, 0x38, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x38, 0x38, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x38, 0x39, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x38, 0x39, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x38, 0x39, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x39, 0x30, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x39, 0x30, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x39, 0x30, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x39, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x39, 0x31, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x39, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x39, 0x32, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x39, 0x32, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x39, 0x33, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x39, 0x33, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x39, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x39, 0x34, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x39, 0x34, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x39, 0x35, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x39, 0x35, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x39, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x39, 0x36, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x39, 0x36, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x37, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x39, 0x37, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x39, 0x37, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x39, 0x38, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x39, 0x38, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x39, 0x38, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x39, 0x39, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x39, 0x39, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x39, 0x39, 0x22, 0x29, 0x0a, 0x0d, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x31, 0x30, 0x30, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x31, 0x30, 0x30, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x31, 0x30, 0x30, 0x22, 0x37, 0x0a,
	0x0c, 0x54, 0x65, 0x73, 0x74, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x04, 0x74, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x32, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x04, 0x74, 0x65, 0x73, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x54, 0x65, 0x73, 0x74, 0x32, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x62, 0x0a, 0x0a, 0x54, 0x65, 0x73, 0x74, 0x32,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x0b, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x31, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x31, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x42, 0x0a, 0x0b, 0x54,
	0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x54, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x70, 0x69, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65,
	0x72, 0x6c, 0x69, 0x6e, 0x63, 0x6f, 0x78, 0x2f, 0x6f, 0x6e, 0x65, 0x66, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_testapi_proto_rawDescOnce sync.Once
	file_testapi_proto_rawDescData = file_testapi_proto_rawDesc
)

func file_testapi_proto_rawDescGZIP() []byte {
	file_testapi_proto_rawDescOnce.Do(func() {
		file_testapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_testapi_proto_rawDescData)
	})
	return file_testapi_proto_rawDescData
}

var file_testapi_proto_msgTypes = make([]protoimpl.MessageInfo, 106)
var file_testapi_proto_goTypes = []interface{}{
	(*TestRequest)(nil),   // 0: testapi.TestRequest
	(*TestResponse)(nil),  // 1: testapi.TestResponse
	(*TestProto)(nil),     // 2: testapi.TestProto
	(*Assignable1)(nil),   // 3: testapi.Assignable1
	(*Assignable2)(nil),   // 4: testapi.Assignable2
	(*Assignable3)(nil),   // 5: testapi.Assignable3
	(*Assignable4)(nil),   // 6: testapi.Assignable4
	(*Assignable5)(nil),   // 7: testapi.Assignable5
	(*Assignable6)(nil),   // 8: testapi.Assignable6
	(*Assignable7)(nil),   // 9: testapi.Assignable7
	(*Assignable8)(nil),   // 10: testapi.Assignable8
	(*Assignable9)(nil),   // 11: testapi.Assignable9
	(*Assignable10)(nil),  // 12: testapi.Assignable10
	(*Assignable11)(nil),  // 13: testapi.Assignable11
	(*Assignable12)(nil),  // 14: testapi.Assignable12
	(*Assignable13)(nil),  // 15: testapi.Assignable13
	(*Assignable14)(nil),  // 16: testapi.Assignable14
	(*Assignable15)(nil),  // 17: testapi.Assignable15
	(*Assignable16)(nil),  // 18: testapi.Assignable16
	(*Assignable17)(nil),  // 19: testapi.Assignable17
	(*Assignable18)(nil),  // 20: testapi.Assignable18
	(*Assignable19)(nil),  // 21: testapi.Assignable19
	(*Assignable20)(nil),  // 22: testapi.Assignable20
	(*Assignable21)(nil),  // 23: testapi.Assignable21
	(*Assignable22)(nil),  // 24: testapi.Assignable22
	(*Assignable23)(nil),  // 25: testapi.Assignable23
	(*Assignable24)(nil),  // 26: testapi.Assignable24
	(*Assignable25)(nil),  // 27: testapi.Assignable25
	(*Assignable26)(nil),  // 28: testapi.Assignable26
	(*Assignable27)(nil),  // 29: testapi.Assignable27
	(*Assignable28)(nil),  // 30: testapi.Assignable28
	(*Assignable29)(nil),  // 31: testapi.Assignable29
	(*Assignable30)(nil),  // 32: testapi.Assignable30
	(*Assignable31)(nil),  // 33: testapi.Assignable31
	(*Assignable32)(nil),  // 34: testapi.Assignable32
	(*Assignable33)(nil),  // 35: testapi.Assignable33
	(*Assignable34)(nil),  // 36: testapi.Assignable34
	(*Assignable35)(nil),  // 37: testapi.Assignable35
	(*Assignable36)(nil),  // 38: testapi.Assignable36
	(*Assignable37)(nil),  // 39: testapi.Assignable37
	(*Assignable38)(nil),  // 40: testapi.Assignable38
	(*Assignable39)(nil),  // 41: testapi.Assignable39
	(*Assignable40)(nil),  // 42: testapi.Assignable40
	(*Assignable41)(nil),  // 43: testapi.Assignable41
	(*Assignable42)(nil),  // 44: testapi.Assignable42
	(*Assignable43)(nil),  // 45: testapi.Assignable43
	(*Assignable44)(nil),  // 46: testapi.Assignable44
	(*Assignable45)(nil),  // 47: testapi.Assignable45
	(*Assignable46)(nil),  // 48: testapi.Assignable46
	(*Assignable47)(nil),  // 49: testapi.Assignable47
	(*Assignable48)(nil),  // 50: testapi.Assignable48
	(*Assignable49)(nil),  // 51: testapi.Assignable49
	(*Assignable50)(nil),  // 52: testapi.Assignable50
	(*Assignable51)(nil),  // 53: testapi.Assignable51
	(*Assignable52)(nil),  // 54: testapi.Assignable52
	(*Assignable53)(nil),  // 55: testapi.Assignable53
	(*Assignable54)(nil),  // 56: testapi.Assignable54
	(*Assignable55)(nil),  // 57: testapi.Assignable55
	(*Assignable56)(nil),  // 58: testapi.Assignable56
	(*Assignable57)(nil),  // 59: testapi.Assignable57
	(*Assignable58)(nil),  // 60: testapi.Assignable58
	(*Assignable59)(nil),  // 61: testapi.Assignable59
	(*Assignable60)(nil),  // 62: testapi.Assignable60
	(*Assignable61)(nil),  // 63: testapi.Assignable61
	(*Assignable62)(nil),  // 64: testapi.Assignable62
	(*Assignable63)(nil),  // 65: testapi.Assignable63
	(*Assignable64)(nil),  // 66: testapi.Assignable64
	(*Assignable65)(nil),  // 67: testapi.Assignable65
	(*Assignable66)(nil),  // 68: testapi.Assignable66
	(*Assignable67)(nil),  // 69: testapi.Assignable67
	(*Assignable68)(nil),  // 70: testapi.Assignable68
	(*Assignable69)(nil),  // 71: testapi.Assignable69
	(*Assignable70)(nil),  // 72: testapi.Assignable70
	(*Assignable71)(nil),  // 73: testapi.Assignable71
	(*Assignable72)(nil),  // 74: testapi.Assignable72
	(*Assignable73)(nil),  // 75: testapi.Assignable73
	(*Assignable74)(nil),  // 76: testapi.Assignable74
	(*Assignable75)(nil),  // 77: testapi.Assignable75
	(*Assignable76)(nil),  // 78: testapi.Assignable76
	(*Assignable77)(nil),  // 79: testapi.Assignable77
	(*Assignable78)(nil),  // 80: testapi.Assignable78
	(*Assignable79)(nil),  // 81: testapi.Assignable79
	(*Assignable80)(nil),  // 82: testapi.Assignable80
	(*Assignable81)(nil),  // 83: testapi.Assignable81
	(*Assignable82)(nil),  // 84: testapi.Assignable82
	(*Assignable83)(nil),  // 85: testapi.Assignable83
	(*Assignable84)(nil),  // 86: testapi.Assignable84
	(*Assignable85)(nil),  // 87: testapi.Assignable85
	(*Assignable86)(nil),  // 88: testapi.Assignable86
	(*Assignable87)(nil),  // 89: testapi.Assignable87
	(*Assignable88)(nil),  // 90: testapi.Assignable88
	(*Assignable89)(nil),  // 91: testapi.Assignable89
	(*Assignable90)(nil),  // 92: testapi.Assignable90
	(*Assignable91)(nil),  // 93: testapi.Assignable91
	(*Assignable92)(nil),  // 94: testapi.Assignable92
	(*Assignable93)(nil),  // 95: testapi.Assignable93
	(*Assignable94)(nil),  // 96: testapi.Assignable94
	(*Assignable95)(nil),  // 97: testapi.Assignable95
	(*Assignable96)(nil),  // 98: testapi.Assignable96
	(*Assignable97)(nil),  // 99: testapi.Assignable97
	(*Assignable98)(nil),  // 100: testapi.Assignable98
	(*Assignable99)(nil),  // 101: testapi.Assignable99
	(*Assignable100)(nil), // 102: testapi.Assignable100
	(*Test2Request)(nil),  // 103: testapi.Test2Request
	(*Test2Response)(nil), // 104: testapi.Test2Response
	(*Test2Proto)(nil),    // 105: testapi.Test2Proto
}
var file_testapi_proto_depIdxs = []int32{
	2,   // 0: testapi.TestRequest.test:type_name -> testapi.TestProto
	3,   // 1: testapi.TestProto.assignable1:type_name -> testapi.Assignable1
	4,   // 2: testapi.TestProto.assignable2:type_name -> testapi.Assignable2
	5,   // 3: testapi.TestProto.assignable3:type_name -> testapi.Assignable3
	6,   // 4: testapi.TestProto.assignable4:type_name -> testapi.Assignable4
	7,   // 5: testapi.TestProto.assignable5:type_name -> testapi.Assignable5
	8,   // 6: testapi.TestProto.assignable6:type_name -> testapi.Assignable6
	9,   // 7: testapi.TestProto.assignable7:type_name -> testapi.Assignable7
	10,  // 8: testapi.TestProto.assignable8:type_name -> testapi.Assignable8
	11,  // 9: testapi.TestProto.assignable9:type_name -> testapi.Assignable9
	12,  // 10: testapi.TestProto.assignable10:type_name -> testapi.Assignable10
	13,  // 11: testapi.TestProto.assignable11:type_name -> testapi.Assignable11
	14,  // 12: testapi.TestProto.assignable12:type_name -> testapi.Assignable12
	15,  // 13: testapi.TestProto.assignable13:type_name -> testapi.Assignable13
	16,  // 14: testapi.TestProto.assignable14:type_name -> testapi.Assignable14
	17,  // 15: testapi.TestProto.assignable15:type_name -> testapi.Assignable15
	18,  // 16: testapi.TestProto.assignable16:type_name -> testapi.Assignable16
	19,  // 17: testapi.TestProto.assignable17:type_name -> testapi.Assignable17
	20,  // 18: testapi.TestProto.assignable18:type_name -> testapi.Assignable18
	21,  // 19: testapi.TestProto.assignable19:type_name -> testapi.Assignable19
	22,  // 20: testapi.TestProto.assignable20:type_name -> testapi.Assignable20
	23,  // 21: testapi.TestProto.assignable21:type_name -> testapi.Assignable21
	24,  // 22: testapi.TestProto.assignable22:type_name -> testapi.Assignable22
	25,  // 23: testapi.TestProto.assignable23:type_name -> testapi.Assignable23
	26,  // 24: testapi.TestProto.assignable24:type_name -> testapi.Assignable24
	27,  // 25: testapi.TestProto.assignable25:type_name -> testapi.Assignable25
	28,  // 26: testapi.TestProto.assignable26:type_name -> testapi.Assignable26
	29,  // 27: testapi.TestProto.assignable27:type_name -> testapi.Assignable27
	30,  // 28: testapi.TestProto.assignable28:type_name -> testapi.Assignable28
	31,  // 29: testapi.TestProto.assignable29:type_name -> testapi.Assignable29
	32,  // 30: testapi.TestProto.assignable30:type_name -> testapi.Assignable30
	33,  // 31: testapi.TestProto.assignable31:type_name -> testapi.Assignable31
	34,  // 32: testapi.TestProto.assignable32:type_name -> testapi.Assignable32
	35,  // 33: testapi.TestProto.assignable33:type_name -> testapi.Assignable33
	36,  // 34: testapi.TestProto.assignable34:type_name -> testapi.Assignable34
	37,  // 35: testapi.TestProto.assignable35:type_name -> testapi.Assignable35
	38,  // 36: testapi.TestProto.assignable36:type_name -> testapi.Assignable36
	39,  // 37: testapi.TestProto.assignable37:type_name -> testapi.Assignable37
	40,  // 38: testapi.TestProto.assignable38:type_name -> testapi.Assignable38
	41,  // 39: testapi.TestProto.assignable39:type_name -> testapi.Assignable39
	42,  // 40: testapi.TestProto.assignable40:type_name -> testapi.Assignable40
	43,  // 41: testapi.TestProto.assignable41:type_name -> testapi.Assignable41
	44,  // 42: testapi.TestProto.assignable42:type_name -> testapi.Assignable42
	45,  // 43: testapi.TestProto.assignable43:type_name -> testapi.Assignable43
	46,  // 44: testapi.TestProto.assignable44:type_name -> testapi.Assignable44
	47,  // 45: testapi.TestProto.assignable45:type_name -> testapi.Assignable45
	48,  // 46: testapi.TestProto.assignable46:type_name -> testapi.Assignable46
	49,  // 47: testapi.TestProto.assignable47:type_name -> testapi.Assignable47
	50,  // 48: testapi.TestProto.assignable48:type_name -> testapi.Assignable48
	51,  // 49: testapi.TestProto.assignable49:type_name -> testapi.Assignable49
	52,  // 50: testapi.TestProto.assignable50:type_name -> testapi.Assignable50
	53,  // 51: testapi.TestProto.assignable51:type_name -> testapi.Assignable51
	54,  // 52: testapi.TestProto.assignable52:type_name -> testapi.Assignable52
	55,  // 53: testapi.TestProto.assignable53:type_name -> testapi.Assignable53
	56,  // 54: testapi.TestProto.assignable54:type_name -> testapi.Assignable54
	57,  // 55: testapi.TestProto.assignable55:type_name -> testapi.Assignable55
	58,  // 56: testapi.TestProto.assignable56:type_name -> testapi.Assignable56
	59,  // 57: testapi.TestProto.assignable57:type_name -> testapi.Assignable57
	60,  // 58: testapi.TestProto.assignable58:type_name -> testapi.Assignable58
	61,  // 59: testapi.TestProto.assignable59:type_name -> testapi.Assignable59
	62,  // 60: testapi.TestProto.assignable60:type_name -> testapi.Assignable60
	63,  // 61: testapi.TestProto.assignable61:type_name -> testapi.Assignable61
	64,  // 62: testapi.TestProto.assignable62:type_name -> testapi.Assignable62
	65,  // 63: testapi.TestProto.assignable63:type_name -> testapi.Assignable63
	66,  // 64: testapi.TestProto.assignable64:type_name -> testapi.Assignable64
	67,  // 65: testapi.TestProto.assignable65:type_name -> testapi.Assignable65
	68,  // 66: testapi.TestProto.assignable66:type_name -> testapi.Assignable66
	69,  // 67: testapi.TestProto.assignable67:type_name -> testapi.Assignable67
	70,  // 68: testapi.TestProto.assignable68:type_name -> testapi.Assignable68
	71,  // 69: testapi.TestProto.assignable69:type_name -> testapi.Assignable69
	72,  // 70: testapi.TestProto.assignable70:type_name -> testapi.Assignable70
	73,  // 71: testapi.TestProto.assignable71:type_name -> testapi.Assignable71
	74,  // 72: testapi.TestProto.assignable72:type_name -> testapi.Assignable72
	75,  // 73: testapi.TestProto.assignable73:type_name -> testapi.Assignable73
	76,  // 74: testapi.TestProto.assignable74:type_name -> testapi.Assignable74
	77,  // 75: testapi.TestProto.assignable75:type_name -> testapi.Assignable75
	78,  // 76: testapi.TestProto.assignable76:type_name -> testapi.Assignable76
	79,  // 77: testapi.TestProto.assignable77:type_name -> testapi.Assignable77
	80,  // 78: testapi.TestProto.assignable78:type_name -> testapi.Assignable78
	81,  // 79: testapi.TestProto.assignable79:type_name -> testapi.Assignable79
	82,  // 80: testapi.TestProto.assignable80:type_name -> testapi.Assignable80
	83,  // 81: testapi.TestProto.assignable81:type_name -> testapi.Assignable81
	84,  // 82: testapi.TestProto.assignable82:type_name -> testapi.Assignable82
	85,  // 83: testapi.TestProto.assignable83:type_name -> testapi.Assignable83
	86,  // 84: testapi.TestProto.assignable84:type_name -> testapi.Assignable84
	87,  // 85: testapi.TestProto.assignable85:type_name -> testapi.Assignable85
	88,  // 86: testapi.TestProto.assignable86:type_name -> testapi.Assignable86
	89,  // 87: testapi.TestProto.assignable87:type_name -> testapi.Assignable87
	90,  // 88: testapi.TestProto.assignable88:type_name -> testapi.Assignable88
	91,  // 89: testapi.TestProto.assignable89:type_name -> testapi.Assignable89
	92,  // 90: testapi.TestProto.assignable90:type_name -> testapi.Assignable90
	93,  // 91: testapi.TestProto.assignable91:type_name -> testapi.Assignable91
	94,  // 92: testapi.TestProto.assignable92:type_name -> testapi.Assignable92
	95,  // 93: testapi.TestProto.assignable93:type_name -> testapi.Assignable93
	96,  // 94: testapi.TestProto.assignable94:type_name -> testapi.Assignable94
	97,  // 95: testapi.TestProto.assignable95:type_name -> testapi.Assignable95
	98,  // 96: testapi.TestProto.assignable96:type_name -> testapi.Assignable96
	99,  // 97: testapi.TestProto.assignable97:type_name -> testapi.Assignable97
	100, // 98: testapi.TestProto.assignable98:type_name -> testapi.Assignable98
	101, // 99: testapi.TestProto.assignable99:type_name -> testapi.Assignable99
	102, // 100: testapi.TestProto.assignable100:type_name -> testapi.Assignable100
	105, // 101: testapi.Test2Request.test:type_name -> testapi.Test2Proto
	3,   // 102: testapi.Test2Proto.assignable1:type_name -> testapi.Assignable1
	0,   // 103: testapi.TestService.Test:input_type -> testapi.TestRequest
	1,   // 104: testapi.TestService.Test:output_type -> testapi.TestResponse
	104, // [104:105] is the sub-list for method output_type
	103, // [103:104] is the sub-list for method input_type
	103, // [103:103] is the sub-list for extension type_name
	103, // [103:103] is the sub-list for extension extendee
	0,   // [0:103] is the sub-list for field type_name
}

func init() { file_testapi_proto_init() }
func file_testapi_proto_init() {
	if File_testapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_testapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable5); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable6); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable7); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable8); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable9); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable10); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable11); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable12); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable13); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable14); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable15); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable18); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable19); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable20); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable21); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable22); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable23); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable24); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable25); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable26); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable27); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable28); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable29); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable30); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable31); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable32); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable33); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable34); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable35); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable36); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable37); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable38); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable39); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable40); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable41); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable42); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable43); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable44); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable45); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable46); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable47); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable48); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable49); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable50); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable51); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable52); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable53); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable54); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable55); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable56); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable57); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable58); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable59); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable60); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable61); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable62); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable63); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable65); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable66); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable67); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable68); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable69); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable70); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable71); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable72); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable73); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable74); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable75); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable76); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable77); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable78); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable79); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable80); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable81); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable82); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable83); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable84); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable85); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable86); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable87); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable88); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable89); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable90); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable91); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable92); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable93); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable94); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable95); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable96); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable97); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable98); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable99); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignable100); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Test2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Test2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testapi_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Test2Proto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_testapi_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*TestProto_Assignable1)(nil),
		(*TestProto_Assignable2)(nil),
		(*TestProto_Assignable3)(nil),
		(*TestProto_Assignable4)(nil),
		(*TestProto_Assignable5)(nil),
		(*TestProto_Assignable6)(nil),
		(*TestProto_Assignable7)(nil),
		(*TestProto_Assignable8)(nil),
		(*TestProto_Assignable9)(nil),
		(*TestProto_Assignable10)(nil),
		(*TestProto_Assignable11)(nil),
		(*TestProto_Assignable12)(nil),
		(*TestProto_Assignable13)(nil),
		(*TestProto_Assignable14)(nil),
		(*TestProto_Assignable15)(nil),
		(*TestProto_Assignable16)(nil),
		(*TestProto_Assignable17)(nil),
		(*TestProto_Assignable18)(nil),
		(*TestProto_Assignable19)(nil),
		(*TestProto_Assignable20)(nil),
		(*TestProto_Assignable21)(nil),
		(*TestProto_Assignable22)(nil),
		(*TestProto_Assignable23)(nil),
		(*TestProto_Assignable24)(nil),
		(*TestProto_Assignable25)(nil),
		(*TestProto_Assignable26)(nil),
		(*TestProto_Assignable27)(nil),
		(*TestProto_Assignable28)(nil),
		(*TestProto_Assignable29)(nil),
		(*TestProto_Assignable30)(nil),
		(*TestProto_Assignable31)(nil),
		(*TestProto_Assignable32)(nil),
		(*TestProto_Assignable33)(nil),
		(*TestProto_Assignable34)(nil),
		(*TestProto_Assignable35)(nil),
		(*TestProto_Assignable36)(nil),
		(*TestProto_Assignable37)(nil),
		(*TestProto_Assignable38)(nil),
		(*TestProto_Assignable39)(nil),
		(*TestProto_Assignable40)(nil),
		(*TestProto_Assignable41)(nil),
		(*TestProto_Assignable42)(nil),
		(*TestProto_Assignable43)(nil),
		(*TestProto_Assignable44)(nil),
		(*TestProto_Assignable45)(nil),
		(*TestProto_Assignable46)(nil),
		(*TestProto_Assignable47)(nil),
		(*TestProto_Assignable48)(nil),
		(*TestProto_Assignable49)(nil),
		(*TestProto_Assignable50)(nil),
		(*TestProto_Assignable51)(nil),
		(*TestProto_Assignable52)(nil),
		(*TestProto_Assignable53)(nil),
		(*TestProto_Assignable54)(nil),
		(*TestProto_Assignable55)(nil),
		(*TestProto_Assignable56)(nil),
		(*TestProto_Assignable57)(nil),
		(*TestProto_Assignable58)(nil),
		(*TestProto_Assignable59)(nil),
		(*TestProto_Assignable60)(nil),
		(*TestProto_Assignable61)(nil),
		(*TestProto_Assignable62)(nil),
		(*TestProto_Assignable63)(nil),
		(*TestProto_Assignable64)(nil),
		(*TestProto_Assignable65)(nil),
		(*TestProto_Assignable66)(nil),
		(*TestProto_Assignable67)(nil),
		(*TestProto_Assignable68)(nil),
		(*TestProto_Assignable69)(nil),
		(*TestProto_Assignable70)(nil),
		(*TestProto_Assignable71)(nil),
		(*TestProto_Assignable72)(nil),
		(*TestProto_Assignable73)(nil),
		(*TestProto_Assignable74)(nil),
		(*TestProto_Assignable75)(nil),
		(*TestProto_Assignable76)(nil),
		(*TestProto_Assignable77)(nil),
		(*TestProto_Assignable78)(nil),
		(*TestProto_Assignable79)(nil),
		(*TestProto_Assignable80)(nil),
		(*TestProto_Assignable81)(nil),
		(*TestProto_Assignable82)(nil),
		(*TestProto_Assignable83)(nil),
		(*TestProto_Assignable84)(nil),
		(*TestProto_Assignable85)(nil),
		(*TestProto_Assignable86)(nil),
		(*TestProto_Assignable87)(nil),
		(*TestProto_Assignable88)(nil),
		(*TestProto_Assignable89)(nil),
		(*TestProto_Assignable90)(nil),
		(*TestProto_Assignable91)(nil),
		(*TestProto_Assignable92)(nil),
		(*TestProto_Assignable93)(nil),
		(*TestProto_Assignable94)(nil),
		(*TestProto_Assignable95)(nil),
		(*TestProto_Assignable96)(nil),
		(*TestProto_Assignable97)(nil),
		(*TestProto_Assignable98)(nil),
		(*TestProto_Assignable99)(nil),
		(*TestProto_Assignable100)(nil),
	}
	file_testapi_proto_msgTypes[105].OneofWrappers = []interface{}{
		(*Test2Proto_Assignable1)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_testapi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   106,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_testapi_proto_goTypes,
		DependencyIndexes: file_testapi_proto_depIdxs,
		MessageInfos:      file_testapi_proto_msgTypes,
	}.Build()
	File_testapi_proto = out.File
	file_testapi_proto_rawDesc = nil
	file_testapi_proto_goTypes = nil
	file_testapi_proto_depIdxs = nil
}
